<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用ensp模拟器中的防火墙（USG6000V）配置NAT</title>
      <link href="/posts/b8d26614.html"/>
      <url>/posts/b8d26614.html</url>
      
        <content type="html"><![CDATA[<h4 id="一-NAT介绍"><a href="#一-NAT介绍" class="headerlink" title="一.NAT介绍"></a>一.NAT介绍</h4><h5 id="1-NAT（Network-Address-Translation，网络地址转换）："><a href="#1-NAT（Network-Address-Translation，网络地址转换）：" class="headerlink" title="1.NAT（Network Address Translation，网络地址转换）："></a>1.NAT（Network Address Translation，网络地址转换）：</h5><p>简单来说就是将内部私有地址转换成公网地址。在NAT中，涉及到内部本地地址、内部全局地址、外部本地地址、外部全局地址。它们的含义是：</p><p>内部本地地址：内网中设备所使用的 IP 地址，此地址通常是一个私有地址。</p><p>内部全局地址：公有地址，通常是 ISP 所提供的，由内网设备与外网设备通信时所使用到的。</p><p>外部本地地址：外网中设备所使用的地址，这个地址是在面向内网设备时所使用的，它不一定是一个公网地址。</p><p>外部全局地址：外网设备所使用的真正的地址，是公网地址。</p><p>2.NAT的分类：</p><p>根据转化方式的不同，NAT可以分为三类：</p><p>源NAT：源地址转化的NAT。如NO—PAT, NAPT, Easy_ip</p><p>目的NAT：将目的地址进行转化的NAT。如NAT-Server</p><p>双向NAT：即将源地址和目的地址都做NAT转换。</p><h5 id="2-NAT的优缺点："><a href="#2-NAT的优缺点：" class="headerlink" title="2.NAT的优缺点："></a>2.NAT的优缺点：</h5><p>优点：</p><p>1、减缓了可用的IP地址空间的枯竭。</p><p>2、隐藏了内部网络的网络结构，避免了来自外部的网络攻击。</p><p>缺点：</p><p>1、网络监控的难度加大</p><p>2、限制了某些具体应用</p><h5 id="3-NAT所面临的问题："><a href="#3-NAT所面临的问题：" class="headerlink" title="3.NAT所面临的问题："></a>3.NAT所面临的问题：</h5><p>1、NAT违反了IP地址结构模型的设计原则。因为IP地址结构模型的基础是每个IP地址均标识了一个网络的连接，而NAT使得有很多主机可能同时使用相同的地址。</p><p>2、NAT使得IP协议从面向无连接变成面向连接。NAT必须维护专用IP地址与公用IP地址以及端口号的映射关系。在TCP/IP协议体系中，如果一个路由器出现故障，不会影响到TCP协议的执行。而当存在NAT时，最初设计的TCP/IP协议过程将发生变化，Internet可能变得非常脆弱。</p><p>3、NAT违反了基本的网络分层结构模型的设计原则。因为在传统的网络分层结构模型中，第N层是不能修改第N+1层的报头内容的。NAT破坏了这种各层独立的原则。</p><p>4、限制了某些应用的使用。如由于NAT的存在，使得P2P应用实现出现困难，因为P2P的文件共享与语音共享都是建立在IP协议的基础上的。</p><p>5、NAT同时存在对高层协议和安全性的影响问题。</p><p><strong>有人会问，既然NAT存在这么多的问题，那为什么还使用它呢？因为NAT的存在总体来说是“利大于弊”的，不能因为存在一些这样那样的问题就否决它。</strong></p><p>下面开始讲解防火墙配置NAT。</p><h4 id="二-NAT拓扑图"><a href="#二-NAT拓扑图" class="headerlink" title="二.NAT拓扑图"></a>二.NAT拓扑图</h4><p><img src="https://dl.img.timecdn.cn/2023/09/20/12-1.png!h.webp"></p><h4 id="三-配置"><a href="#三-配置" class="headerlink" title="三.配置"></a>三.配置</h4><h5 id="1-将两台电脑配置好ip地址、子网掩码、网关。"><a href="#1-将两台电脑配置好ip地址、子网掩码、网关。" class="headerlink" title="1.将两台电脑配置好ip地址、子网掩码、网关。"></a>1.将两台电脑配置好ip地址、子网掩码、网关。</h5><p>一台模拟公司内部的电脑（192.168.1.1/24）<strong>（属于trust区域）</strong>。一台模拟公网上的电脑（23.1.1.1/24）<strong>（属于untrust区域）</strong>。</p><h5 id="路由器的配置："><a href="#路由器的配置：" class="headerlink" title="路由器的配置："></a>路由器的配置：</h5><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Huawei]sysname ar1</span><br><span class="line">[ar1]interface GigabitEthernet 0/0/0</span><br><span class="line">[ar1-GigabitEthernet0/0/0]ip address 12.1.1.2 255.255.255.0</span><br><span class="line">[ar1-GigabitEthernet0/0/0]quit</span><br><span class="line">[ar1]interface GigabitEthernet 0/0/1</span><br><span class="line">[ar1-GigabitEthernet0/0/1]ip address 23.1.1.2 255.255.255.0</span><br><span class="line">[ar1-GigabitEthernet0/0/1]quit</span><br><span class="line">[ar1]quit</span><br><span class="line">save</span><br></pre></td></tr></tbody></table></figure><h5 id="2-云的配置："><a href="#2-云的配置：" class="headerlink" title="2.云的配置："></a>2.云的配置：</h5><p>（1）首先，防火墙默认只有GigabitEthernet0/0/0是受信任端口，所以云必须和防火墙的GigabitEthernet0/0/0相连。</p><p>（2）防火墙的GigabitEthernet0/0/0端口默认地址是192.168.0.1，所以必须将云的网卡地址设置为192.168.0.0/24网段，才能实现通过web连接防火墙。</p><p><img src="https://dl2.img.timecdn.cn/2023/09/20/12-2.png!h.webp"></p><p><img src="https://dl3.img.timecdn.cn/2023/09/20/12-3.png!h.webp"></p><p><img src="https://dl.img.timecdn.cn/2023/09/20/12-4.png!h.webp"></p><h5 id="3-防火墙的配置"><a href="#3-防火墙的配置" class="headerlink" title="3.防火墙的配置"></a>3.防火墙的配置</h5><p>（1）USG6000V防火墙的默认帐号是admin，默认密码是Admin@123。必须修改一下密码。</p><p>（2）防火墙的各个端口默认是禁止任何操作的。如ping操作、telnet操作、ssh操作、http（s）操作。所以，需要把各个操作打开。</p><p><img src="https://dl2.img.timecdn.cn/2023/09/20/12-5.png!h.webp"></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[fw1]interface GigabitEthernet 0/0/0</span><br><span class="line">[fw1-GigabitEthernet0/0/0]service-manage all permit</span><br><span class="line">[fw1-GigabitEthernet0/0/0]quit</span><br><span class="line">[fw1]interface GigabitEthernet 1/0/1</span><br><span class="line">[fw1-GigabitEthernet1/0/1]service-manage all permit</span><br><span class="line">[fw1-GigabitEthernet1/0/1]quit</span><br><span class="line">[fw1]interface GigabitEthernet 1/0/0</span><br><span class="line">[fw1-GigabitEthernet1/0/0]service-manage all permit</span><br><span class="line">[fw1-GigabitEthernet1/0/0]quit</span><br><span class="line">[fw1]quit</span><br><span class="line">save</span><br></pre></td></tr></tbody></table></figure><p>（3）打开浏览器，输入192.168.0.1即可进入配置防火墙界面。</p><p>1）在网络——接口中，配置各个接口的ip地址和所属区域。</p><p><img src="https://dl3.img.timecdn.cn/2023/09/20/12-6.png!h.webp"></p><p><img src="https://dl.img.timecdn.cn/2023/09/20/12-7.png!h.webp"></p><p>2）新建所需的各个地址段和ip地址池。</p><p><img src="https://dl2.img.timecdn.cn/2023/09/20/12-8.png!h.webp"></p><p><img src="https://dl3.img.timecdn.cn/2023/09/20/12-9.png!h.webp"></p><p>3）新建NAT策略。</p><p><img src="https://dl.img.timecdn.cn/2023/09/20/12-10.png!h.webp"></p><p>4）新建安全转发策略。</p><p><img src="https://dl2.img.timecdn.cn/2023/09/20/12-11.png!h.webp"></p><p>5）增加一条静态路由。</p><p><img src="https://dl3.img.timecdn.cn/2023/09/20/12-12.png!h.webp"></p><p><strong>6）最后一定要记得保存！</strong></p><h5 id="4-验证"><a href="#4-验证" class="headerlink" title="4.验证"></a>4.验证</h5><p>1、内部电脑ping内部全局地址（12.1.1.1）</p><p><img src="https://dl2.img.timecdn.cn/2023/09/20/12-13.png!h.webp"></p><p>2、内部电脑ping公网电脑</p><p><img src="https://dl.img.timecdn.cn/2023/09/20/12-14.png!h.webp"></p><p>3、公网电脑ping内部电脑（ping不通是因为本次实验做的是easy ip，即只做源地址转换的NAT，所以外网根本就无法与内网通信）</p><p><img src="https://dl.img.timecdn.cn/2023/09/20/12-15.png!h.webp"></p><p>4、在防火墙上查看NAT地址转换的情况</p><p><img src="https://dl.img.timecdn.cn/2023/09/20/12-16.png!h.webp"></p>]]></content>
      
      
      <categories>
          
          <category> 防火墙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ensp </tag>
            
            <tag> 防火墙 </tag>
            
            <tag> NAT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言 基本输入输出函数</title>
      <link href="/posts/d04fe4f1.html"/>
      <url>/posts/d04fe4f1.html</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>在学习了几种C语言输入输出函数，如下列出：</p><ul><li>printf 与 scanf</li><li>getchar 与 putchar</li><li>gets 与 puts</li></ul><p>相比之下 printf 与 scanf的功能最为强大，但操作稍显复杂，后两种则功能简单，但针对性较强。做一下记录以备查询。</p><h4 id="一-printf函数"><a href="#一-printf函数" class="headerlink" title="一.printf函数"></a>一.printf函数</h4><h5 id="1-功能：按照规定格式输出指定数据"><a href="#1-功能：按照规定格式输出指定数据" class="headerlink" title="1.功能：按照规定格式输出指定数据"></a>1.功能：按照规定格式输出指定数据</h5><p>一般形式：如图</p><p><img src="https://dl2.img.timecdn.cn/2023/09/18/image.png!h.webp"></p><p>​        格式控制:由“％”后跟格式字符组成。将输出数据转换为指定格式输出，字符串原样输出，转义字符对输出形式进行控制。</p><h5 id="2-格式说明如图"><a href="#2-格式说明如图" class="headerlink" title="2.格式说明如图"></a>2.格式说明如图</h5><p><img src="https://dl3.img.timecdn.cn/2023/09/18/image.png!h.webp"></p><table><thead><tr><th align="center">附加格式说明字符</th><th align="center">说 明</th></tr></thead><tbody><tr><td align="center">-</td><td align="center">输出的数字或字符以左对齐，右边填空格</td></tr><tr><td align="center">0（数字）</td><td align="center">输出的空位用0填充。</td></tr><tr><td align="center">m（一个正整数）</td><td align="center">输出数据的字段宽度。如果实际位数多于m，按实际位数输出；如果实际位数少于m，则补以空格或0。</td></tr><tr><td align="center">n（一个正整数）</td><td align="center">对实数，表示输出n位小数；对字符串，表示截取的字符个数。</td></tr><tr><td align="center">l（字母）</td><td align="center">输出长整型整数</td></tr></tbody></table><h5 id="3-常见格式输出"><a href="#3-常见格式输出" class="headerlink" title="3.常见格式输出"></a>3.常见格式输出</h5><ul><li>%d —— 以带符号的十进制形式输出整数</li><li>%o —— 以无符号的八进制形式输出整数</li><li>%x —— 以无符号的十六进制形式输出整数</li><li>%u —— 以无符号的十进制形式输出整数</li><li>%c —— 以字符形式输出单个字符</li><li>%s —— 输出字符串</li><li>%f —— 以小数点形式输出单、双精度实数</li><li>%e —— 以标准指数形式输出单、双精度实数</li><li>%g —— 选用输出宽度较小的格式输出实数</li></ul><h6 id="d格式符"><a href="#d格式符" class="headerlink" title="%d格式符"></a>%d格式符</h6><p>格式： %[-][0][m][l]d</p><p>说明:</p><ul><li>%d 按整型数据的实际长度输出。</li><li>%[0]md 以m指定的字段宽度输出，如果数据的位数小于m，则左端补以空格；若m前面有“0”，则左端补以0。</li><li>%-md 以m指定的字段宽度输出，左对齐。</li><li>%ld 输出长整型数据。</li></ul><h6 id="c格式符"><a href="#c格式符" class="headerlink" title="%c格式符"></a>%c格式符</h6><p>格式：%[m]c</p><p>说明：输出一个字符。输出数据可以是单个字符，或一个范围在0～255之间的整数。</p><p>例：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line">main( )</span><br><span class="line">{   <span class="type">char</span> x=‘a’;  <span class="type">int</span> i=<span class="number">98</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c,%d\n"</span>,x,x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c,%d\n"</span>,i,i);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// output</span></span><br><span class="line">a,<span class="number">97</span></span><br><span class="line">b,<span class="number">98</span></span><br></pre></td></tr></tbody></table></figure><h6 id="s格式符"><a href="#s格式符" class="headerlink" title="%s格式符"></a>%s格式符</h6><p>格式：%[-][m][.n]s</p><p>说明:</p><ul><li>%s 直接输出指定字符串。</li><li>%ms 输出字符串占m列，右对齐。m小于字符串长度时原样输出，大于字符串长度时不足补空格，下同。</li><li>%-ms 输出字符串占m列，左对齐。</li><li>%m.ns 输出字符串前n个字符，占m列，右对齐。</li></ul><p>例：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>{</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%3s,%-6s,%-5.2s,%4.3s,%.3s,"</span>,<span class="string">"hello"</span>, </span><br><span class="line">    <span class="string">"hello"</span>,<span class="string">"hello"</span>,<span class="string">"hello"</span>,<span class="string">"hello"</span>);</span><br><span class="line">}</span><br><span class="line">输出结果:</span><br><span class="line">hello,hello ,he   , hel,hel,</span><br></pre></td></tr></tbody></table></figure><h6 id="f格式符"><a href="#f格式符" class="headerlink" title="%f格式符"></a>%f格式符</h6><p>格式： %[-][0][m][.n][l]f</p><p>说明：</p><ul><li>%f 整数部分全部输出，小数部分输出6位（四舍五入）。</li><li>0 右边补0满足小数位数，或左边补0满足m列</li><li>%m.nf 输出数据共占m列，小数占n位，右对齐。只有m时，当m大于字符串长度则需补足m列，当m小于字符串长度则与%f同</li><li>%-m.nf 输出数据共占m列，小数占n位，左对齐。</li><li>%lf 以双精度输出</li></ul><p>例：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>{</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> f=<span class="number">3.14159</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%f,%07.3f,%-7.3f,%10f,%.3f,"</span>,f,f,f,f,f);</span><br><span class="line">}  </span><br><span class="line"></span><br><span class="line"><span class="comment">// output:</span></span><br><span class="line"><span class="number">3.141590</span>,<span class="number">003.142</span>,<span class="number">3.142</span>  ,  <span class="number">3.141590</span>,<span class="number">3.142</span>,</span><br></pre></td></tr></tbody></table></figure><h6 id="e格式符"><a href="#e格式符" class="headerlink" title="%e格式符"></a>%e格式符</h6><p>格式：%[-][0][m][.n]e</p><p>说明：</p><ul><li>%e：输出数据共占13位，其中整数部分为1位非零数字，小数点占1位，小数部分为6位，指数部分e占1位，指数符号占1位，指数为3位。若输出数据为负数，还应增加一位整数部分的符号位。</li><li>%m.ne 输出占m列，小数位为n项(四舍五入)。m小于输出宽度时原样输出，大于输出宽度时补足空位</li><li>–设置左对齐</li></ul><p>如下图</p><p><img src="https://dl.img.timecdn.cn/2023/09/18/image.png!h.webp"></p><p>例：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>{</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n,%10.1e"</span>,<span class="number">31.5</span>);</span><br><span class="line">}</span><br><span class="line"><span class="comment">// output</span></span><br><span class="line">,  <span class="number">3.2e+001</span></span><br></pre></td></tr></tbody></table></figure><h6 id="o、-x和-u格式符"><a href="#o、-x和-u格式符" class="headerlink" title="%o、%x和%u格式符"></a>%o、%x和%u格式符</h6><p>格式： %[-][0][m][l]o(x或u)</p><p>说明：</p><p>将内存单元中的二进制数（包括符号位）直接转换成八进制数、十六进制或十进制数输出。</p><ul><li>%o 输出无符号八进制</li><li>%x 输出无符号十六进制</li><li>%u 输出无符号十进制</li></ul><p>例：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>{</span><br><span class="line">    <span class="type">int</span> i=<span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n%d,%o,%x,%u"</span>,i,i,i,i);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// output</span></span><br><span class="line"><span class="number">-1</span>,<span class="number">37777777777</span>,ffffffff,<span class="number">4294967295</span></span><br></pre></td></tr></tbody></table></figure><p>例：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>{</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> ch1 = <span class="number">255</span>; <span class="comment">// 1111 1111  ,1字节</span></span><br><span class="line">    <span class="type">char</span> ch2 = <span class="number">-128</span>;</span><br><span class="line">    <span class="comment">// %hh 限定了字符为8位一个字节 </span></span><br><span class="line">    <span class="comment">// %hhd 有符号十进制字符型 %hhu 无符号十进制字符型</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\n%hhd,%hhu,%hho,%hhx"</span>,ch2,ch1,ch1,ch1);<span class="comment">//128,255,377,ff</span></span><br><span class="line">    <span class="comment">// %h 限定了16位2个字节     </span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">short</span> sh1 = <span class="number">65535</span>; <span class="comment">// 1111 1111 1111 1111 ,2字节</span></span><br><span class="line">    <span class="type">short</span> sh2 = <span class="number">-32767</span>; </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n%hu,%hd,%ho,%hx"</span>,sh2,sh1,sh1,sh1);  <span class="comment">// 32769,-1,177777,ffff</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// %l 限定了32位4个字节 </span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> ulong = <span class="number">4294967295</span>; <span class="comment">//1111 1111 1111 1111 1111 1111 1111 1111  ,4字节</span></span><br><span class="line">    <span class="type">long</span> slong = <span class="number">-2147483647</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n%ld,%lu,%lo,%lx"</span>,slong,ulong,ulong,ulong); <span class="comment">// -2147483647,4294967295,37777777777,ffffffff</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// %ll 限定了64位8个字节 </span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull= <span class="number">4294967295</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ll = <span class="number">-2147483647</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n%lld,%llu,%llo,%llx"</span>,ll,ull,ull,ull);  <span class="comment">// -2147483647,4294967295,37777777777,ffffffff</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// %e指数输出</span></span><br><span class="line">    <span class="type">long</span> <span class="type">double</span> lb = <span class="number">198888888888</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n%Lf,%Le,%Lo,%Lx,%Lg"</span>,lb,lb,lb,lb,lb);  <span class="comment">// 0.000000,5.180393e-317,47776740,9ffdd0,5.18037e-317</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n%La,%LA"</span>,lb,lb); <span class="comment">// 输出十六进制的指数形式  0x0.000000p-1022,0X0.000000P-1022</span></span><br></pre></td></tr></tbody></table></figure><h6 id="g格式符"><a href="#g格式符" class="headerlink" title="%g格式符"></a>%g格式符</h6><p>​        根据数值的大小，自动选择用f格式或e格式输出实数。输出时选择占宽度较小的一种，且不输出无意义的零。</p><p>例：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>{</span><br><span class="line">    <span class="type">float</span> f=<span class="number">3.14159</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n%e,%f,%lf,%g"</span>,f,f,f,f);</span><br><span class="line">} </span><br><span class="line"><span class="comment">// output</span></span><br><span class="line"><span class="number">3.141590e+000</span>,<span class="number">3.141590</span>,<span class="number">3.141590</span>,<span class="number">3.14159</span></span><br></pre></td></tr></tbody></table></figure><h5 id="4-使用printf的注意事项"><a href="#4-使用printf的注意事项" class="headerlink" title="4.使用printf的注意事项"></a>4.使用printf的注意事项</h5><ul><li>不同类型的数据应使用相应类型的格式字符说明其输出形式，以保证显示结果符合预期。</li><li>格式字符中，除了X、E、G外，其他均用小写字母，如“%d”不能写成“%D”。</li><li>如需输出双引号，应在“格式控制”中表示为转义字符的形式并用单引号引起来，即“\””。</li><li>如需输出字符“％”，在“格式控制”中用连续两个“％”即可。</li></ul><p>如：printf(“%d%%”,10);</p><ul><li>当“格式控制”中格式符个数少于输出表中的输出项时，多余的输出项不予输出。</li><li>当“格式符”多于输出项时，多出的格式符输出结果为不定值。</li></ul><h4 id="二-scanf函数"><a href="#二-scanf函数" class="headerlink" title="二.scanf函数"></a>二.scanf函数</h4><p>​        与printf函数一样，scanf函数也是遵守格式化（format）原则，所谓格式化，是该函数预先给程序员定义了一批输入格式，程序员可以选择其中的某些格式，遵守这些格式，scanf函数就可以按照指定的格式来接收键盘的输入数据了。</p><p>​scanf函数只能在控制台程序中使用，有窗口的界面程序无法通过scanf接收按键。当控制台中出现闪烁的光标时，表示程序在等待用户输入数据。在控制台程序中，一般以回车键代表数据输入完毕，下达命令，指示程序开始工作。scanf函数可以接收多个任意类型的数据，但需严格遵守format格式，否则会出错。</p><h5 id="1-功能：要求用户从键盘上输入指定格式的数据。"><a href="#1-功能：要求用户从键盘上输入指定格式的数据。" class="headerlink" title="1.功能：要求用户从键盘上输入指定格式的数据。"></a>1.功能：要求用户从键盘上输入指定格式的数据。</h5><p>一般形式：如图</p><p><img src="https://dl2.img.timecdn.cn/2023/09/18/image7cb214920963a2a4.png!h.webp"></p><p>功能：要求用户从键盘上输入指定格式的数据。</p><p>说明：如果数据不止一个，应在数据之间用一个或多个空格间隔，也可以用回车键或跳格键tab间隔。</p><h5 id="2-scanf格式控制"><a href="#2-scanf格式控制" class="headerlink" title="2.scanf格式控制"></a>2.scanf格式控制</h5><p>格式控制</p><table><thead><tr><th align="center">格式符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">d</td><td align="center">用于输入十进制整数</td></tr><tr><td align="center">o</td><td align="center">用于输入八进制形整数</td></tr><tr><td align="center">x</td><td align="center">用于输入十六进制整数</td></tr><tr><td align="center">c</td><td align="center">用于输入一个字符</td></tr><tr><td align="center">s</td><td align="center">用于输入字符串，并将字符串送到一个字符数组中。输入时以非空白字符开始， 第一个空白字符结束。字符串以串结束标志“\0”作为其最后一个字符。</td></tr><tr><td align="center">f</td><td align="center">用于输入实数。输入时用小数点形式或指数形式均可。(输入双精度必须用%lf，否则不能正常输入)</td></tr><tr><td align="center">e</td><td align="center">与f作用相同</td></tr></tbody></table><hr><p>附加格式</p><table><thead><tr><th align="center">格式字符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">*</td><td align="center">表示本输入项在输入后不赋给相应的变量。（不存储）</td></tr><tr><td align="center">l（字母）</td><td align="center">用于输入长整型和双精度实型数据</td></tr><tr><td align="center">m（一个正整数）</td><td align="center">用于输入长整型和双精度实型数据</td></tr></tbody></table><h5 id="3-scanf函数的格式字符串的组成"><a href="#3-scanf函数的格式字符串的组成" class="headerlink" title="3.scanf函数的格式字符串的组成"></a>3.scanf函数的格式字符串的组成</h5><ul><li><strong>格式符</strong></li></ul><p>​和printf函数类似，scanf函数的格式字符串以%开始，以一个格式字符结束，中间可以插入附加字符。格式符告诉了scanf函数该读取什么样的数据。</p><ul><li><strong>空白符</strong></li></ul><p>​空白符可以是空格(space，用空格键输入)、制表符(tab，用Tab键输入)和新行符(newline，用回车键输入)，或者它们的组合</p><ul><li><strong>非空白符</strong></li></ul><p>​        除去格式说明符合空白符之外，就是非空白符。非空白符在用户输入的时候，也必须一并输入。非空白符使scanf() 在缓冲区中读一个匹配的字符并将这个字符忽略。例如，”%d,%d”使scanf()先读入一个整数，接着必须要读入一个逗号，读入到逗号后，表示格式匹配，将读入的逗号丢弃，而不像读入的整数存储到某个内存空间。读入逗号后，接着读入另一个整数。如发现不能匹配格式字符串，比如没有读到逗号，scanf()返回，读入失败。</p><h5 id="4-使用scanf注意事项"><a href="#4-使用scanf注意事项" class="headerlink" title="4.使用scanf注意事项"></a>4.使用scanf注意事项</h5><ul><li>注意变量表列中，应该是<strong>变量的地址</strong>。变量的地址通过求地址符&amp;得到。所以在写代码时千万不要遗漏&amp;符号。</li><li>如果格式字符串中有非空白字符，也就是除了格式控制字符和空白字符之外的字符，则用户在输入的时候一定也要输入这些字符。否则将出现不匹配格式控制字符串的情况。为了使用户正确输入，编程时一定要考虑到用户是否清楚如何输入，最好在需要用户输入前提示如何输入的格式。</li><li>在用%c格式符时，空格字符和转义字符都被当作有效字符输入</li><li>以回车作为下达开始解析命令。整个输入以回车结束。</li></ul><p>如果输入的数据满足了scanf对需要，则输入结束，如果回车后数据不够，则回车只当作一个空白符。</p><ul><li>scanf解析数据，下列情况认为解析出来一个数据：</li></ul><p>读入非字符型数据时，遇到空白字符。有宽度指示时，读入到相应的宽度。如%4d，则只解析4个数字即认为读入这个整数完毕。</p><ul><li>读取双精度double浮点数时，最好使用%lf输入，使用%f可能会导致精度损失甚至读取失败。</li></ul><h5 id="5-scanf使用示例"><a href="#5-scanf使用示例" class="headerlink" title="5.scanf使用示例"></a>5.scanf使用示例</h5><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1）可以指定输入的数据所占据的字符个数，scanf函数自动按照指示截取所需长度的数据。如：</span></span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%3d%3d"</span>,&amp;i,&amp;j);  <span class="comment">// 输入：1234567↙</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d,%d"</span>,i,j);  <span class="comment">// 输出  123，456</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2）%后面的*格式符，用来表示在解析时，将读入的数据忽略不赋给任何变量。如：</span></span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %*d %d"</span>,&amp;i,&amp;j); <span class="comment">// 输入: 123 456 789 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d,%d"</span>,i,j);    <span class="comment">// 输出: 123,789</span></span><br><span class="line"><span class="comment">// 3）输入数据时不能指定精度。如：</span></span><br><span class="line">    <span class="type">float</span> f;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%7.2f"</span>,&amp;f); <span class="comment">// 输入 123.456 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%f23"</span>,f); <span class="comment">// 输出 0.00000023 </span></span><br><span class="line"><span class="comment">// 4) 输入双精度数使用%lf</span></span><br><span class="line">    <span class="comment">// 输入双精度浮点数时，务必用%lf，如下错误</span></span><br><span class="line">    <span class="type">double</span> db;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;db);  <span class="comment">//输入： 123.456</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%f"</span>,db); <span class="comment">// 输出 ： 0.000000</span></span><br></pre></td></tr></tbody></table></figure><h4 id="三-字符输入输出（getchar-putchar）"><a href="#三-字符输入输出（getchar-putchar）" class="headerlink" title="三.字符输入输出（getchar/putchar）"></a>三.字符输入输出（getchar/putchar）</h4><p>​有些时候，仅仅为了在显示器屏幕上打印或从控制台获取一个字符，此时使用功能强大的printf与scanf函数，则显得过于繁琐，C提供了一个库函数putchar/getchar来完成这个简单的任务。</p><h5 id="1-putchar"><a href="#1-putchar" class="headerlink" title="1.putchar"></a>1.putchar</h5><p>putchar 函数是字符输出函数， 其功能是在显示器上打印单个字符。putchar函数是一个标准的C语言库函数，它的函数原型在头文件“stdio.h”中。</p><h6 id="putchar函数的一般格式："><a href="#putchar函数的一般格式：" class="headerlink" title="putchar函数的一般格式："></a>putchar函数的一般格式：</h6><p><code>putchar(字符数据);</code></p><p>其中的putchar是函数名称。</p><h6 id="可以输出的字符类型："><a href="#可以输出的字符类型：" class="headerlink" title="可以输出的字符类型："></a>可以输出的字符类型：</h6><ul><li>字符数据可以是一个字符型变量，如：char c_var= ‘a’; putchar(c_var);</li><li>字符数据也可以是一个字符常量，如putchar(‘a’);输出结果：a</li><li>字符数据还可以是一个整数。整数可以是十进制整数，如：putchar(97);输出结果：a</li><li>字符数据还可以是一个表达式，只要结果是255以内的整数即可。如：</li></ul><p>putchar(‘a’+25);输出结果：z</p><ul><li>字符数据可以是转义字符。如：</li></ul><p><code>putchar(‘\n’);结果输出一个换行。putchar(‘\007’); 输出一个提示音</code></p><h5 id="2-getchar"><a href="#2-getchar" class="headerlink" title="2.getchar"></a>2.getchar</h5><p>这个函数和前面介绍的putchar函数刚好相反。</p><p>getchar 函数是得到字符输入函数，其功能是得到用户输入的一个字符。getchar函数是一个标准的C语言库函数，它的函数原型在头文件“stdio.h”中。</p><h6 id="getchar函数的一般格式是："><a href="#getchar函数的一般格式是：" class="headerlink" title="getchar函数的一般格式是："></a>getchar函数的一般格式是：</h6><p><code>char ch; ch=getchar();</code></p><p>用户输入的字符就赋给了ch变量。如：</p><p><code>char ch; ch=getchar();  // 获取输入的字符 printf("%c",ch);</code></p><h4 id="四-字符串输入输出函数-（gets与puts）"><a href="#四-字符串输入输出函数-（gets与puts）" class="headerlink" title="四.字符串输入输出函数 （gets与puts）"></a>四.字符串输入输出函数 （gets与puts）</h4><h5 id="1-puts"><a href="#1-puts" class="headerlink" title="1.puts"></a>1.puts</h5><p>puts函数功能非常单一，在显示器屏幕上输出一个字符串，并换行。</p><p>一般形式：</p><p><code>puts(字符串);</code></p><p>如：</p><p><code>puts("你好啊~"); 输出结果: 你好啊~</code></p><h5 id="2-gets"><a href="#2-gets" class="headerlink" title="2.gets"></a>2.gets</h5><p>​       gets从标准输入设备读字符串函数。可以无限读取，不会判断上限，以回车结束读取，所以程序员应该确保buffer的空间足够大，以便在执行读操作时不发生溢出。此函数在stdio.h头文件中定义的。</p><p>功能</p><p>​        从stdio流中读取字符串，直至接受到换行符或EOF时停止，并将读取的结果存放在buffer指针所指向的字符数组中。换行符不作为读取串的内容，读取的换行符被转换为‘\0’空字符，并由此来结束字符串。 </p><p>返回值</p><p>​    读入成功，返回与参数buffer相同的指针；读入过程中遇到EOF(End-of-File)或发生错误，返回NULL指针。所以在遇到返回值为NULL的情况，要用ferror或feof函数检查是发生错误还是遇到EOF。 </p><p>示例：</p><p>​    </p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>   </span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">    {</span><br><span class="line">       <span class="type">char</span> buf[<span class="number">20</span>];  <span class="comment">//不要char*p，然后gets(p)，这是错误的，因为p没有指向有效的内存，它可能指向任何非法地址 ，造成非法访问异常                 </span></span><br><span class="line">       gets(buf);</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, buf);</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>与gets/puts类似的还有fgets与fputs，它们一般用于对文件的操作。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 函数 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Matery主题配置Twikoo评论系统</title>
      <link href="/posts/d2ab7f2a.html"/>
      <url>/posts/d2ab7f2a.html</url>
      
        <content type="html"><![CDATA[<h4 id=""><a href="#" class="headerlink" title=""></a></h4><p>Twikoo是一个简洁、安全、免费的静态网站评论系统。有部署有数种方式，其他部署方式要么收费，要么需要服务器，本次选择Vercel 部署，请选择适合自己的部署平台。</p><h4 id="一-Twikoo评论系统配置"><a href="#一-Twikoo评论系统配置" class="headerlink" title="一.Twikoo评论系统配置"></a>一.<a href="https://twikoo.js.org/">Twikoo</a>评论系统配置</h4><h5 id="1-配置MongoDB"><a href="#1-配置MongoDB" class="headerlink" title="1.配置MongoDB"></a>1.配置MongoDB</h5><ol><li>申请 <a href="https://www.mongodb.com/cloud/atlas/register">MongoDB</a> 账号。</li><li>创建免费 MongoDB 数据库，区域推荐选择 <code>AWS / N. Virginia (us-east-1)</code>。</li><li>创建数据库用户和数据库密码。</li><li>设置允许所有 IP 地址的连接。</li><li>Clusters 页面点击 <code>CONNECT</code> - <code>Drivers</code>，记录数据库连接字符串,将连接字符串中的 <code>&lt;password&gt;</code> 修改为数据库密码。</li></ol><h5 id="2-配置-Vercel"><a href="#2-配置-Vercel" class="headerlink" title="2.配置 Vercel"></a>2.配置 Vercel</h5><ol><li>申请 <a href="https://vercel.com/signup">Vercel</a> 账号。</li><li>点击<a href="https://vercel.com/import/project?template=https://github.com/imaegoo/twikoo/tree/main/src/server/vercel-min">Vercel</a>按钮将 Twikoo 一键部署到 Vercel。</li><li>进入 <code>Settings</code> - <code>Environment Variables</code>，添加环境变量<code>Key</code>： <code>MONGODB_URI</code>，<code>Value</code>值为第 1.5 步的数据库连接字符串。</li><li>进入 Deployments , 点击头像后面三个点（更多） , 然后点击Redeploy , 最后点击下面的Redeploy。</li><li>进入 Overview，点击 Domains 下方的链接，如果环境配置正确，可以看到 “Twikoo 云函数运行正常” 的提示。</li></ol><h4 id="二-Matery主题配置"><a href="#二-Matery主题配置" class="headerlink" title="二.Matery主题配置"></a>二.<a href="https://github.com/blinkfox/hexo-theme-matery/tree/develop">Matery</a>主题配置</h4><h5 id="1-配置主题config-yml文件"><a href="#1-配置主题config-yml文件" class="headerlink" title="1.配置主题config.yml文件"></a>1.配置主题config.yml文件</h5><p>添加以下代码</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">twikoo:</span><br><span class="line">  enable: true</span><br><span class="line">  envId: https://xxx.vercel.app # 环境 ID</span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">libs:</span><br><span class="line">  css:</span><br><span class="line">  twikoo: /libs/twikoo/twikoo.all.min.js</span><br></pre></td></tr></tbody></table></figure><h5 id="2-配置post-detail-ejs文件"><a href="#2-配置post-detail-ejs文件" class="headerlink" title="2.配置post-detail.ejs文件"></a>2.配置post-detail.ejs文件</h5><p>在<code>\layout\_partial\post-detail.ejs</code>中添加代码：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.twikoo &amp;&amp; theme.twikoo.enable) { %&gt;</span><br><span class="line">    &lt;%- partial('_partial/twikoo') %&gt;</span><br><span class="line">&lt;% } %&gt;</span><br></pre></td></tr></tbody></table></figure><h5 id="3-配置post-detail-ejs文件"><a href="#3-配置post-detail-ejs文件" class="headerlink" title="3.配置post-detail.ejs文件"></a>3.配置post-detail.ejs文件</h5><p>新建<code>\layout\_partial\twikoo.ejs</code>文件并添加代码：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="card twikoo-card" data-aos="fade-up"&gt;</span><br><span class="line">    &lt;div class="comment_headling" style="font-size: 20px; font-weight: 700; position: relative; padding-left: 20px; top: 15px; padding-bottom: 5px;"&gt;</span><br><span class="line">        &lt;i class="fas fa-comments fa-fw" aria-hidden="true"&gt;&lt;/i&gt;</span><br><span class="line">        &lt;span&gt;评论&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class="card-content" style="display: grid"&gt;</span><br><span class="line">        &lt;div id="tcomments"&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src="&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.js.twikoo) %&gt;"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    twikoo.init({</span><br><span class="line">        envId: '&lt;%- theme.twikoo.envId %&gt;',</span><br><span class="line">        el: '#tcomments',</span><br><span class="line">        region: '&lt;%- theme.twikoo.region %&gt;',</span><br><span class="line">        path: '&lt;%- theme.twikoo.path %&gt;'</span><br><span class="line">    }).then(function () {</span><br><span class="line">        var tkInputs = document.querySelector('#twikoo').getElementsByTagName('input');</span><br><span class="line">        for (var tkInputsIndex = 0; tkInputsIndex &lt; tkInputs.length; tkInputsIndex++) {</span><br><span class="line">            if (tkInputs[tkInputsIndex]) {</span><br><span class="line">                tkInputs[tkInputsIndex].classList.add('browser-default');</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>其中样式部分使用<code>\layout\_partial\valine.ejs</code>中的部分代码。</p><h5 id="4-配置post-detail-ejs文件"><a href="#4-配置post-detail-ejs文件" class="headerlink" title="4.配置post-detail.ejs文件"></a>4.配置post-detail.ejs文件</h5><p>在<code>\layout\contact.ejs</code>中添加代码：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.twikoo &amp;&amp; theme.twikoo.enable) { %&gt;</span><br><span class="line">&lt;%- partial('_partial/twikoo') %&gt;</span><br><span class="line">&lt;% } %&gt;</span><br></pre></td></tr></tbody></table></figure><h5 id="5-配置friends-ejs文件"><a href="#5-配置friends-ejs文件" class="headerlink" title="5.配置friends.ejs文件"></a>5.配置friends.ejs文件</h5><p>在<code>\layout\friends.ejs</code>中添加代码：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.twikoo &amp;&amp; theme.twikoo.enable) { %&gt;</span><br><span class="line">&lt;%- partial('_partial/twikoo') %&gt;</span><br><span class="line">&lt;% } %&gt;</span><br></pre></td></tr></tbody></table></figure><p>在主题<code>\source\libs\</code>路径下新建<code>twikoo</code>文件夹，文件夹中添加两个文件：</p><ul><li><a href="https://cdn.jsdelivr.net/npm/twikoo@1.6.17/dist/twikoo.all.min.js">twikoo.all.min.js</a></li><li><a href="https://cdn.jsdelivr.net/npm/twikoo@1.6.17/dist/twikoo.all.min.js.LICENSE.txt">twikoo.all.min.js.LICENSE.txt</a></li></ul><p>至此Matery主题配置Twikoo评论系统完成。</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matery </tag>
            
            <tag> Blog </tag>
            
            <tag> Twikoo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 GitHub Actions 云编译OpenWrt</title>
      <link href="/posts/a839bc6b.html"/>
      <url>/posts/a839bc6b.html</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>​<a href="https://docs.github.com/cn/actions">GitHub Actions</a> 是 GitHub 的持续集成服务，于2018年10月推出。可以自动化和定制化项目的 Workflow，它的功能非常强大，每一个 <code>action</code> 都用来执行一种操作，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。将这些 <code>actions</code> 组合起来，就是一个持续集成的过程。当然，这些 actions 都共享在 GitHub 的代码仓库中，我们可以直接引用。</p><p>​Github Actions 提供了整套服务器环境，服务器规格为：</p><ul><li>2-core CPU</li><li>7 GB RAM 内存</li><li>84 GB SSD 硬盘空间</li></ul><p>​什么是 Github Actions，官网的介绍是：</p><blockquote><p>With GitHub Actions you can automate your workflow from idea to production.</p></blockquote><p>​所以我们完全可以用它来编译 Open­Wrt固件</p><h4 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h4><p>有以下三个项目地址：</p><p><a href="https://github.com/P3TERX/Actions-OpenWrt">P3TERX</a></p><p><a href="https://github.com/ccbcfan/build-openwrt">ccbcfan</a></p><p><a href="https://github.com/coolsnowwolf/lede">coolsnowwolf/lede</a></p><p>以下教程以ccbcfan为模板，其他两个教程基本一样。</p><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul><li><a href="https://github.com/">GitHub</a> 账号</li><li>本地搭建编译环境，生成<code>.config</code>文件。(可选)</li></ul><h4 id="一-拉取仓库"><a href="#一-拉取仓库" class="headerlink" title="一.拉取仓库"></a>一.拉取仓库</h4><p><img src="https://dl.img.timecdn.cn/2022/01/15/20.png!h.webp"></p><h4 id="二-配置编译的源码跟机型"><a href="#二-配置编译的源码跟机型" class="headerlink" title="二.配置编译的源码跟机型"></a>二.配置编译的源码跟机型</h4><p>​选择要编译的源码跟机型，在.github/workflows文件夹里面的build-openwrt.yml文件修改。</p><p><img src="https://dl2.img.timecdn.cn/2022/01/15/21.png!h.webp"></p><h5 id="1-可供选择型号"><a href="#1-可供选择型号" class="headerlink" title="1.可供选择型号"></a>1.可供选择型号</h5><p><img src="https://dl3.img.timecdn.cn/2022/01/15/22.png"></p><h5 id="2-各型号目录文件介绍"><a href="#2-各型号目录文件介绍" class="headerlink" title="2.各型号目录文件介绍"></a>2.各型号目录文件介绍</h5><p><img src="https://dl3.img.timecdn.cn/2022/01/15/22-1.png"></p><p>build-对应机型的 diy、pacthes、files 文件夹说明：</p><ul><li>diy文件夹里面可以按源码对应路径放入文件替换源码文件，说白了diy文件夹里面就是源码的根目录，你可以按源码路径替换所有的源码文件。</li><li>pacthes补丁文件夹，修改固件源码，然后提取修改差异部分来达到修改源码文件的需求。</li><li>files文件夹，是用来存放你编译好固件然后安装好固件后设置好的文件。</li></ul><h5 id="3-GitHub-Action编译工作文件"><a href="#3-GitHub-Action编译工作文件" class="headerlink" title="3.GitHub Action编译工作文件"></a>3.GitHub Action编译工作文件</h5><p><img src="https://dl2.img.timecdn.cn/2022/01/15/23.png!h.webp"></p><h5 id="4-编译型号修改"><a href="#4-编译型号修改" class="headerlink" title="4.编译型号修改"></a>4.编译型号修改</h5><p><img src="https://dl.img.timecdn.cn/2022/01/15/24.png!h.webp"></p><h4 id="三-启动编译"><a href="#三-启动编译" class="headerlink" title="三.启动编译"></a>三.启动编译</h4><p>​打开Action页面</p><p><img src="https://dl2.img.timecdn.cn/2022/01/15/25.png!h.webp"></p><p>​启动workflow工作流程</p><p><img src="https://dl.img.timecdn.cn/2022/01/15/26.png!h.webp"></p><p>​至此固件编译工作开始，等待2~3个小时即可完成。</p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Openwrt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redmi AC2100刷写Openwrt教程</title>
      <link href="/posts/d224e079.html"/>
      <url>/posts/d224e079.html</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>​        此教程的书写基于 Redmi AC2100 路由器，并不保证其他路由器可用。推荐使用 Windows 10/11 系统。理论上对其他型号路由器也通用，不过需要改一下固件的型号。本教程参考了多位前辈的文档与教程。</p><h5 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h5><p>1、进行教程操作前，请尽量使用网线与路由器连接，否则可能无法进行部分操作。正常情况是无需设置电脑防火墙和关闭杀毒软件的，但保险起见还是关闭防火墙和杀毒软件，不然刷成砖就后悔了！</p><p>2、教程中涉及文件存储和操作的所有路径和命令，请保证为全英文路径和命令(不得使用中文字符)，使用中文路径可能出现未知错误，导致刷机失败！</p><h4 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h4><h4 id="一-开启SSH"><a href="#一-开启SSH" class="headerlink" title="一.开启SSH"></a>一.开启SSH</h4><p>​        利用官方固件的漏洞，通过Web注入漏洞开启SSH实现刷机，更换至漏洞官方固件版本，降级只需用官方更新方法手动刷入即可。</p><h5 id="1-下载固件"><a href="#1-下载固件" class="headerlink" title="1.下载固件"></a>1.下载固件</h5><p>​有漏洞固件版本为：AC2100 2.0.7*版本</p><p>官方下载链接：</p><p>红米RM2100：<a href="http://cdn.cnbj1.fds.api.mi-img.com/xiaoqiang/rom/rm2100/miwifi_rm2100_firmware_d6234_2.0.7.bin">点我下载</a></p><p>小米R2100：<a href="http://cdn.cnbj1.fds.api.mi-img.com/xiaoqiang/rom/r2100/miwifi_r2100_firmware_4b519_2.0.722.bin">点我下载</a></p><p>其中 miwifi_rm2100开头的是红米的，miwifi_r2100开头的是小米的。</p><h5 id="2-漏洞注入"><a href="#2-漏洞注入" class="headerlink" title="2.漏洞注入"></a>2.漏洞注入</h5><p>​降级到漏洞版本后，通过下面web命令开启SSH。</p><p>​在浏览器中使用管理密码登录路由器管理页面(192.168.31.1)，登录后地址栏链接应为:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/web/home#router</span><br></pre></td></tr></tbody></table></figure><p>​这里的关键是**<stok>**号，每台机器不同，甚至每次登录都不同，拷贝下来备用。</stok></p><p>​在浏览器地址栏中输入以下链接代码，注意替换掉<stok>部分为上面拷贝的：</stok></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/api/misystem/set_config_iotdev?bssid=Xiaomi&amp;user_id=longdike&amp;ssid=-h%3B%20nvram%20set%20ssh_en%3D1%3B%20nvram%20commit%3B%20sed%20-i%20's%2Fchannel%3D.*%2Fchannel%3D%5C%22debug%5C%22%2Fg'%20%2Fetc%2Finit.d%2Fdropbear%3B%20%2Fetc%2Finit.d%2Fdropbear%20start%3B</span><br></pre></td></tr></tbody></table></figure><p>​返回{“code”:0}即代表成功，其实成不成功都会返回这个：）注意传参顺序及指令前后都要有一个分号，即%3B</p><p>​如果返回401错误，原因可能是版本不正确或者<stok>值错误或者链接输入不完整等，提示404错误，说明输入地址错误，请检查固件版本或链接地址…</stok></p><p><strong>建议一键注入后需等待一些时间，保证路由器后台能正确处理注入信息后再重启。</strong></p><p>重启即可开启SSH，root密码请自行根据SN计算；不想计算的或不知道怎么计算的，可以看下一步。</p><h5 id="3-更改管理员root密码-可跳过"><a href="#3-更改管理员root密码-可跳过" class="headerlink" title="3.更改管理员root密码 (可跳过)"></a>3.更改管理员root密码 (可跳过)</h5><p>​执行下面的代码改密码为admin，在浏览器地址栏中输入以下链接代码，注意替换掉<stok>部分。(有时stok值会发生改变，建议重新返回第3步骤复制最新的stok值)</stok></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/api/misystem/set_config_iotdev?bssid=Xiaomi&amp;user_id=longdike&amp;ssid=-h%3B%20echo%20-e%20'admin%5Cnadmin'%20%7C%20passwd%20root%3B</span><br></pre></td></tr></tbody></table></figure><hr><h4 id="二-刷写Breed"><a href="#二-刷写Breed" class="headerlink" title="二.刷写Breed"></a>二.刷写Breed</h4><p>​<strong>Breed</strong> 是一个由 <a href="https://www.right.com.cn/forum/thread-161906-1-1.html">hackpascal</a> 大神自写的与 <strong>U-Boot</strong> 同级的 Bootloader。<strong>Breed</strong> 可以使你方便的更换其他的固件，因为 <strong>Reset</strong> 不会重置 <strong>Breed</strong> 而会重置固件，因此如果你想把 <strong>Openwrt</strong> 换成 <strong>Padavan</strong>，那么只需要 <strong>Reset</strong> 一下，在 <strong>Breed</strong> 重刷一下固件就可以了！</p><p>首先我们下载一下适用于 <strong>Redmi AC2100</strong> 的 <strong>Breed</strong>，<a href="https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin">点此下载</a></p><p>然后打开<code>cmd</code> 。输入:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@192.168.31.1</span><br></pre></td></tr></tbody></table></figure><p>​然后输入 <code>admin</code> ，回车。不出意外的话，我们就成功使用 <code>ssh</code> 登录了路由器中的系统。</p><h5 id="1-本地刷入Breed"><a href="#1-本地刷入Breed" class="headerlink" title="1.本地刷入Breed"></a>1.本地刷入Breed</h5><p>​按 <code>Ctrl + D</code> 退出登录，输入:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /path-to-breed root@192.168.31.1:/tmp</span><br></pre></td></tr></tbody></table></figure><p>​这里的 <code>/path-to-breed</code> 代表的是上面下载的 <strong>Breed</strong> 的路径，例如 <code>D:\Downloads\breed-mt7621-xiaomi-r3g.bin</code> ，这条命令即将下载的 <strong>Breed</strong> 传输到了路由器的 <code>/tmp</code> 目录中。</p><p>接下来我们按上述过程重新登录路由器后，输入：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp</span><br></pre></td></tr></tbody></table></figure><p>​进入路由器中的 <code>/tmp</code> 目录，接下来运行：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader</span><br></pre></td></tr></tbody></table></figure><h5 id="2-在线刷Breed"><a href="#2-在线刷Breed" class="headerlink" title="2.在线刷Breed"></a>2.在线刷Breed</h5><p>​输入下面联网刷Breed (r3gbreed通用红米AC2100)：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp &amp;&amp; wget https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin &amp;&amp; mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader</span><br></pre></td></tr></tbody></table></figure><p>​备用地址:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp &amp;&amp; wget http://3322d.f3322.net:16999/other/breed/breed-mt7621-xiaomi-r3g.bin &amp;&amp; mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader</span><br></pre></td></tr></tbody></table></figure><p>​刷入完成，然后等待路由器重启（当电脑获取到ip或者路由只有一个蓝灯亮时，breed引导官方固件成功）。为防止变砖，强烈建议等待5分钟后拔电，用牙签按住<code>reset</code>键再插电，等蓝灯闪烁，松开reset键，浏览器访问<code>192.168.1.1</code>即可进入breedweb界面。</p><p>​更改环境变量，编缉，新增字段<code>xiaomi.r3g.bootfw</code>，值设置为 <code>2</code>，然后保存。</p><p><img src="https://dl.img.timecdn.cn/2021/12/27/6.jpg!h.webp"></p><hr><h4 id="三-从-breed-刷写固件"><a href="#三-从-breed-刷写固件" class="headerlink" title="三.从 breed 刷写固件"></a>三.从 breed 刷写固件</h4><p>​首先是下载我们需要的固件，下面推荐几个。也可到恩山论坛自行选择。</p><p>Padavan(HIBOY)固件:<a href="https://opt.cn2qq.com/padavan/RM2100_3.4.3.9-099.trx">点此下载</a></p><p>Openwrt(<a href="https://www.right.com.cn/FORUM/thread-4048412-1-1.html">Heroes233</a>):<a href="https://down.cloudorz.com/Router/LEDE/XiaoMi/XiaoMi-AC2100/">点此下载</a></p><p>Openwrt(官方)：<a href="https://openwrt.org/zh/toh/views/toh_fwdownload?dataflt%5BBrand*~%5D=xiaomi&amp;dataflt%5BModel*~%5D=Redmi+Router+AC2100%09">点此下载</a></p><h5 id="1-从breed刷入Openwrt底包"><a href="#1-从breed刷入Openwrt底包" class="headerlink" title="1.从breed刷入Openwrt底包"></a>1.从breed刷入Openwrt底包</h5><p><img src="https://dl2.img.timecdn.cn/2021/12/27/7.png!h.webp"></p><h5 id="2-从底包的临时web通过升级的方式刷入openwrt固件"><a href="#2-从底包的临时web通过升级的方式刷入openwrt固件" class="headerlink" title="2.从底包的临时web通过升级的方式刷入openwrt固件"></a>2.从底包的临时web通过升级的方式刷入openwrt固件</h5><p>​对应的菜单是System -&gt; Backup / Flash Firmware），点击 Flash image… 上传想刷的Openwrt固件</p><p><img src="https://dl3.img.timecdn.cn/2021/12/27/8.png"></p><p><img src="https://dl3.img.timecdn.cn/2021/12/27/9.png"></p><p><img src="https://dl3.img.timecdn.cn/2021/12/27/10.png"></p><p>不要勾选 Keep settings and retain the current configuration，最后点Continue，等几分钟让路由器自己重启。进入新固件。</p><hr><h4 id="四-Openwrt配置"><a href="#四-Openwrt配置" class="headerlink" title="四.Openwrt配置"></a>四.Openwrt配置</h4><h5 id="1-配置-IPv4-网络"><a href="#1-配置-IPv4-网络" class="headerlink" title="1.配置 IPv4 网络"></a>1.配置 IPv4 网络</h5><p>​首先将网线与路由器的 <code>WAN</code> 口连接。</p><p>​我们打开 <strong>网络</strong> 中的 <strong>接口</strong> ，然后编辑 <code>WAN</code> 口信息，将协议切换为 <code>PPPoE</code> ，填写用户名和密码，其他一般不用管，直接保存即可。</p><h5 id="2-设置路由器定时重启"><a href="#2-设置路由器定时重启" class="headerlink" title="2.设置路由器定时重启"></a>2.设置路由器定时重启</h5><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># * * * * *  command to execute</span><br><span class="line"># │ │ │ │ │</span><br><span class="line"># │ │ │ │ │</span><br><span class="line"># │ │ │ │ └───── 一周内的天数 (<span class="number">0</span> - <span class="number">6</span>) (<span class="number">0</span> to <span class="number">6</span> are <span class="title class_">Sunday</span> to <span class="title class_">Saturday</span>, or use names; <span class="number">7</span> is <span class="title class_">Sunday</span>, the same <span class="keyword">as</span> <span class="number">0</span>)</span><br><span class="line"># │ │ │ └────────── 月 (<span class="number">1</span> - <span class="number">12</span>)</span><br><span class="line"># │ │ └─────────────── 天 (<span class="number">1</span> - <span class="number">31</span>)</span><br><span class="line"># │ └──────────────────── 小时 (<span class="number">0</span> - <span class="number">23</span>)</span><br><span class="line"># └───────────────────────── <span class="title function_">min</span> (<span class="number">0</span> - <span class="number">59</span>)</span><br><span class="line"></span><br><span class="line">如</span><br><span class="line">配置入下： 周一至周五</span><br><span class="line">凌晨<span class="number">1.30</span>关闭无线，要睡觉了。睡觉避免辐射</span><br><span class="line">早上<span class="number">7</span>点打开无线，手机要离线下载新闻，上班路上看</span><br><span class="line">早上<span class="number">9</span>点关闭无线</span><br><span class="line">下午<span class="number">16</span>点开启无线等待楼主下班回家</span><br><span class="line">周六至周日</span><br><span class="line">凌晨<span class="number">2</span>点关闭无线睡觉</span><br><span class="line">早上<span class="number">7</span>点开启无线至第二天凌晨<span class="number">2</span>点</span><br><span class="line"></span><br><span class="line"><span class="number">30</span> <span class="number">1</span> * * <span class="number">1</span>-<span class="number">5</span> /etc/wifioff.<span class="property">sh</span></span><br><span class="line"><span class="number">0</span> <span class="number">7</span> * * <span class="number">1</span>-<span class="number">5</span> /etc/wifion.<span class="property">sh</span></span><br><span class="line"><span class="number">0</span> <span class="number">9</span> * * <span class="number">1</span>-<span class="number">5</span> /etc/wifioff.<span class="property">sh</span></span><br><span class="line"><span class="number">0</span> <span class="number">16</span> * * <span class="number">1</span>-<span class="number">5</span> /etc/wifion.<span class="property">sh</span></span><br><span class="line"><span class="number">0</span> <span class="number">2</span> * * <span class="number">6</span>,<span class="number">0</span> /etc/wifioff.<span class="property">sh</span></span><br><span class="line"><span class="number">0</span> <span class="number">7</span> * * <span class="number">6</span>,<span class="number">0</span> /etc/wifion.<span class="property">sh</span></span><br></pre></td></tr></tbody></table></figure><h5 id="3-定时关闭WIFI"><a href="#3-定时关闭WIFI" class="headerlink" title="3.定时关闭WIFI"></a>3.定时关闭WIFI</h5><p>​周一至周五的每天早上7:30关闭WIFI：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">30</span> <span class="number">7</span> * * <span class="number">1</span>-<span class="number">5</span> wifi down</span><br></pre></td></tr></tbody></table></figure><p>​周一至周五的每天早上7:30打开WIFI:</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">35</span> <span class="number">7</span> * * <span class="number">1</span>-<span class="number">5</span> wifi up</span><br></pre></td></tr></tbody></table></figure><p>​每天下午18:00关闭WIFI，9号、19号、29号除外:</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">18</span> <span class="number">1</span>-<span class="number">8</span>,<span class="number">10</span>-<span class="number">18</span>,<span class="number">20</span>-<span class="number">31</span> * * wifi down</span><br></pre></td></tr></tbody></table></figure><p><img src="https://dl.img.timecdn.cn/2021/12/27/11.png!h.webp"></p><h5 id="4-Adguard-home-详细配置"><a href="#4-Adguard-home-详细配置" class="headerlink" title="4.Adguard home 详细配置"></a>4.Adguard home 详细配置</h5><p>​安装教程已经很多了，在这里就不多说了。只强调一点，ipk安装完成以后，可能会出现无法更新内核的问题。此时需要注释掉防火墙内的默认的DNS解析优先端口。</p><p>​注释掉这两条规则，注释之后为：<br>​                </p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#iptables -t nat -A <span class="variable constant_">PREROUTING</span> -p udp --dport <span class="number">53</span> -j <span class="variable constant_">REDIRECT</span> --to-ports <span class="number">53</span></span><br><span class="line">#iptables -t nat -A <span class="variable constant_">PREROUTING</span> -p tcp --dport <span class="number">53</span> -j <span class="variable constant_">REDIRECT</span> --to-ports <span class="number">53</span></span><br></pre></td></tr></tbody></table></figure><h5 id="5-打开”服务-–-AdGuard-Home”"><a href="#5-打开”服务-–-AdGuard-Home”" class="headerlink" title="5.打开”服务 – AdGuard Home”"></a>5.打开”服务 – AdGuard Home”</h5><ul><li><p>更新核心版本，如不能更新可下载内核自行更新</p></li><li><p>用 WinSCP 打开路由器，将内核放到 /usr/bin/AdGuardHome 路径下！</p></li><li><p>刷新浏览器即可看到 核心版本</p></li></ul><p>​勾选启用，将重定向设置为 作为 dnsmasq 的上游服务器</p><p><img src="https://dl2.img.timecdn.cn/2021/12/27/12.webp"></p><h5 id="5-AdGuard-Home-页面设置"><a href="#5-AdGuard-Home-页面设置" class="headerlink" title="5.AdGuard Home 页面设置"></a>5.AdGuard Home 页面设置</h5><p>​1.点击 AdGuardHome Web:3000 跳转 AdGuard Home 管理页面</p><p><img src="https://dl.img.timecdn.cn/2021/12/27/13.png!h.webp"></p><p>​网页管理界面 - 监听接口 - 端口默认为 80，随意设置，只要没被占用即可。</p><p>​DNS 服务器 - 监听接口 - 端口默认为 53，随意设置，只要没被占用即可。</p><p><img src="https://dl.img.timecdn.cn/2021/12/27/14.png!h.webp"></p><p>​设置登陆 AdGuard Home 管理页面的用户名和密码</p><p><img src="https://dl.img.timecdn.cn/2021/12/27/15.png!h.webp"></p><p>​以上设置完成，直接下一步即可</p><p><img src="https://dl2.img.timecdn.cn/2021/12/27/16.png!h.webp"></p><p>​打开 设置–常规设置 如图设置！（记得保存）</p><p><img src="https://dl2.img.timecdn.cn/2021/12/27/17.webp"></p><p>打开 设置–DNS 设置</p><ul><li><p>上游 DNS 服务器，第一个 IP 设置成你的运营商 DNS，后面 3 个可以如图填写！</p></li><li><p>Bootstrap DNS 服务器，设置成你的运营商 DNS！</p></li><li><p>DNS 服务设定，速度限制 填写 0 为不限制！</p></li><li><p>除了 202.98.192.67 替换成你的运营商 DNS，其他看图设置即可</p><p><img src="https://dl3.img.timecdn.cn/2021/12/27/18.webp"></p></li></ul><p>打开 过滤器–DNS 封锁</p><ul><li><p>添加阻止列表并启用</p></li><li><p>提供几个比较好用的规则</p></li></ul><p><a href="https://anti-ad.net/">anti-AD</a></p><p><a href="https://gitee.com/halflife/list/issues/I1CV06">halflife</a></p><p><a href="https://easylist.to/easylist/easylist.txt">Easylist</a></p><p><a href="https://easylist-downloads.adblockplus.org/easylistchina.txt">Easylistchina</a></p><p><img src="https://dl3.img.timecdn.cn/2021/12/27/19.webp"></p><hr><h4 id="五-路由器指示灯状态说明"><a href="#五-路由器指示灯状态说明" class="headerlink" title="五.路由器指示灯状态说明"></a>五.路由器指示灯状态说明</h4><p>1.蓝灯长亮：工作正常</p><p>2.蓝灯闪烁：刷机成功（需要断电重启，注意路由断电后请等待10s以上再通电）</p><p>3.橙灯长亮：正在启动</p><p>4.橙灯闪烁：进入刷机流程或系统升级中（该过程不要断电）</p><p>5.红灯长亮：系统故障</p><p>6.红灯闪烁：刷机失败</p>]]></content>
      
      
      <categories>
          
          <category> 路由器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由器 </tag>
            
            <tag> AC2100 </tag>
            
            <tag> Openwrt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Onedrive目录程序——OneManager搭建详细教程</title>
      <link href="/posts/ca093fb9.html"/>
      <url>/posts/ca093fb9.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>首先感谢<a href="https://github.com/qkqpttgf">qkqpttgf</a>这位大佬开发的<a href="https://github.com/qkqpttgf/OneManager-php">OneManager</a></p></blockquote><h4 id="一-OneManager是什么"><a href="#一-OneManager是什么" class="headerlink" title="一.OneManager是什么"></a>一.OneManager是什么</h4><p>​这是一个利用微软onedrive api将onedrive目录映射成一个云盘的程序，类似的程序有很多，比如OneIndex、Pyone、OnePoint等等。这个程序的特点是支持多种onedrive类型，可以部署在vps，heroku，以及云函数上。</p><h4 id="二-搭建教程"><a href="#二-搭建教程" class="headerlink" title="二.搭建教程"></a>二.搭建教程</h4><h5 id="1-准备条件"><a href="#1-准备条件" class="headerlink" title="1.准备条件"></a>1.准备条件</h5><ul><li>onedriver账号<br>没有的话注册一个 <a href="https://onedrive.live.com/">https://onedrive.live.com/</a></li><li>腾讯云账号<br>微信号注册一个就行</li><li>个人域名<br>可有可无，有的话可以通过配置自定义域名来访问网盘<br>没有的话可以通过腾讯云提供的免费域名访问</li><li>下载<a href="https://github.com/qkqpttgf/OneManager-php">OneDrive_SCF</a>源码</li></ul><h5 id="2-配置云函数"><a href="#2-配置云函数" class="headerlink" title="2.配置云函数"></a>2.配置云函数</h5><h6 id="登录腾讯云SCF"><a href="#登录腾讯云SCF" class="headerlink" title="登录腾讯云SCF"></a>登录<a href="https://console.cloud.tencent.com/scf">腾讯云SCF</a></h6><ul><li><p>登录后新建云函数。</p></li><li><p>地区建议选择<code>香港</code>。</p><p><img src="https://dl.img.timecdn.cn/2021/12/27/1.png" alt="1.png"></p></li><li><p>创建方式选择模板函数，模糊搜索：<code>helloworld，Php7</code>。</p></li><li><p>选择 helloworld模板，点击下一步。</p></li><li><p>函数名称随意填写。</p><p><img src="https://dl.img.timecdn.cn/2021/12/27/2.png" alt="2.png"></p></li></ul><h6 id="创建触发器"><a href="#创建触发器" class="headerlink" title="创建触发器"></a>创建触发器</h6><ul><li><p>触发器配置<code>自定义创建</code></p></li><li><p>触发方式<code>API网关触发</code></p></li><li><p>勾选<code>集成响应</code></p><p><img src="https://dl.img.timecdn.cn/2021/12/27/3.png" alt="3.png"></p></li></ul><p>创建完成后进入<code>函数管理</code> - <code>函数代码</code></p><ul><li><p>提交方法：<code>本地上传zip包</code>，上传下载的源码。</p><p><img src="https://dl2.img.timecdn.cn/2021/12/27/4.png!h.webp"></p></li></ul><h6 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h6><p>提交后进入<code>触发管理</code></p><ul><li><p>点击进入访问路径链接</p><p><img src="https://dl3.img.timecdn.cn/2021/12/27/5.png"></p></li><li><p>点击安装</p></li><li><p>选择简体中文，点击<code>新建 SecretId &amp; SecretKey</code>获取自己的API秘钥，填写至对应的输入框中。</p></li><li><p>提交后设置管理员密码</p></li><li><p>设置后点击确认，点击右上角的登录，输入设置的密码即可</p></li></ul><h4 id="三-添加onedriver盘"><a href="#三-添加onedriver盘" class="headerlink" title="三.添加onedriver盘"></a>三.添加onedriver盘</h4><p>​可选的设置不需要管，直接点击添加onedriver盘</p><p>​标签和名称随意，如果您的盘是国际版，也就是例如A1、国外edu等获取的，那么需要选择MS：国际版（商业版与个人版）；如果是世纪互联，比如买的yiyi的，请选择CN：世纪互联版，不管是什么版，都建议使用自己申请的应用ID与机密，不用OneManager默认的，主要是因为api有使用限制，一定时间内调用的次数有限。</p><h5 id="1-申请id和秘钥"><a href="#1-申请id和秘钥" class="headerlink" title="1.申请id和秘钥"></a>1.申请id和秘钥</h5><p>​如果是国际版，请访问<a href="https://portal.azure.com/">国际版</a>，如果是世纪互联版，请访问<a href="https://portal.azure.cn/">世纪互联版</a>，登录自己要注册自己的api的账号。下面我就以国际版为例：</p><ul><li>登录之后，找到Azure Active Directory并进入，然后点击左侧的 应用注册。</li><li>然后选择 新注册，应用名称随便，但是建议写简明好记的，比如onemanager，具体填写和选择的请按照下图，其中重定向URL地址为<code> https://scfonedrive.github.io/</code>。</li><li>注册完之后，复制记录下客户端ID，备用，然后点击左侧的 证书和密码。</li><li>新增客户端密码，说明随便写，截止期限，选择最长期限，然后点击添加，把这个刚生成的秘钥保存下来，这个只显示一次，以后就看不到了，如果忘了，只能重新生成一个。</li><li>然后点击左侧的 API权限，添加权限，点击 Microsoft Graph，然后点击里面的 委托的权限，找到里面的Files类别里的 Files.ReadWrite.All，勾选之后点击添加权限，然后刷新。</li><li>最后将刚才记录的应用程序ID和秘钥，粘贴到onemanager程序里，然后确定即可，有的时候可能第一次添加失败，删除这个盘，重新添加一次即可。</li></ul><h4 id="四-自定义域名"><a href="#四-自定义域名" class="headerlink" title="四.自定义域名"></a>四.自定义域名</h4><p>​如果对访问的地址不太满意，可以自定义域名。域名的话十几块钱就可以申请下来了，不过好像是需要备案的。也可以申请免费的域名<a href="https://www.freenom.com/zh/index.html">freenom</a>，转移到<a href="https://dash.cloudflare.com/">Cloudflare</a>进行域名解析，就不用备案了，还自带SSL证书。</p><p>选择<code>触发管理</code>，点击<code>SCF_API_SERVICE</code>，点击<code>自定义域名</code>，新建自定义域名，没有证书的话选择http协议</p><p><code>添加CNAME记录，将域名指向服务的二级域名</code></p><p>路径映射选择：<code>自定义路径映射</code></p><table><thead><tr><th align="center">路径</th><th align="center">环境</th></tr></thead><tbody><tr><td align="center">/</td><td align="center">发布</td></tr></tbody></table><p>然后就没有了。访问自己的域名即可。</p>]]></content>
      
      
      <categories>
          
          <category> 网盘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Onedrive </tag>
            
            <tag> OneManager </tag>
            
            <tag> 网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 jsDelivr CDN加速 GitHub Pages 博客的静态资源</title>
      <link href="/posts/bf2f1bbe.html"/>
      <url>/posts/bf2f1bbe.html</url>
      
        <content type="html"><![CDATA[<p><strong>CDN加速</strong></p><blockquote><p>​CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。——百度百科</p></blockquote><p>​存放在Github的资源在国内加载速度比较慢，因此需要使用CDN加速来优化网站打开速度，jsDelivr + Github便是免费且好用的CDN，非常适合博客网站使用。</p><h4 id="一-首先新建GitHub仓库"><a href="#一-首先新建GitHub仓库" class="headerlink" title="一.首先新建GitHub仓库"></a>一.首先新建GitHub仓库</h4><ul><li>仓库名称随便</li><li>仓库属性Public，不然jsDelivr无法访问</li><li>初始化Readme</li></ul><h4 id="二-克隆创建仓库到本地"><a href="#二-克隆创建仓库到本地" class="headerlink" title="二.克隆创建仓库到本地"></a>二.克隆创建仓库到本地</h4><ul><li>本地新建一个文件夹，文件夹名称自定义，然后进入文件夹</li><li>shift+右键打开<code>Git Bash Here </code>克隆仓库到指定文件夹</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone //加上仓库的链接</span><br></pre></td></tr></tbody></table></figure><h4 id="三-上传需要加速的文件"><a href="#三-上传需要加速的文件" class="headerlink" title="三.上传需要加速的文件"></a>三.上传需要加速的文件</h4><p>把要加速的文件复制到克隆的文件夹里</p><p><strong>注意：JSDelivr不能加速超过50M的文件，如果文件超过50M，可以分次上传。</strong></p><p>然后再依次执行下面的命令：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "用户名"</span><br><span class="line">git config --global user.email "邮箱"</span><br><span class="line">git init             #表示在当前的项目目录中生成本地的git管理</span><br><span class="line">git add .            #会把本地所有untrack的文件都加入暂存区</span><br><span class="line">git commit -m “注释”#命令将暂存区内容添加到本地仓库中。</span><br><span class="line">git push             #用于从将本地的分支版本上传到远程并合并。</span><br></pre></td></tr></tbody></table></figure><p>然后去GitHub仓库查看效果即可。</p><h4 id="四-发布仓库"><a href="#四-发布仓库" class="headerlink" title="四.发布仓库"></a>四.发布仓库</h4><ul><li><h5 id="进入仓库点击release，进行版本的发布。"><a href="#进入仓库点击release，进行版本的发布。" class="headerlink" title="进入仓库点击release，进行版本的发布。"></a>进入仓库点击release，进行版本的发布。</h5></li><li><h5 id="自定义发布版本号，添加标题和描述等。"><a href="#自定义发布版本号，添加标题和描述等。" class="headerlink" title="自定义发布版本号，添加标题和描述等。"></a>自定义发布版本号，添加标题和描述等。</h5></li></ul><p>版本便于我们区别就行，更新一次就更新一下版本。</p><h4 id="五-jsDelivr加速并引用资源"><a href="#五-jsDelivr加速并引用资源" class="headerlink" title="五.jsDelivr加速并引用资源"></a>五.jsDelivr加速并引用资源</h4><ul><li><h5 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a><strong>使用方法：</strong></h5></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</span><br></pre></td></tr></tbody></table></figure><p><strong>格式：<code>https://cdn.jsdelivr.net/gh/username/repo@version/file</code></strong></p><p>例如：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js</span><br></pre></td></tr></tbody></table></figure><p><strong>注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源，除此之外还可以使用某个范围内的版本，查看所有资源等，具体使用方法如下：</strong></p><ul><li><h5 id="加载任何-GitHub-版本、提交或分支"><a href="#加载任何-GitHub-版本、提交或分支" class="headerlink" title="加载任何 GitHub 版本、提交或分支"></a>加载任何 GitHub 版本、提交或分支</h5></li></ul><p>注意：我们建议对支持 npm 的项目使用 npm</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/user/repo@version/file</span><br></pre></td></tr></tbody></table></figure><ul><li><h5 id="使用版本范围而不是特定版本"><a href="#使用版本范围而不是特定版本" class="headerlink" title="使用版本范围而不是特定版本"></a>使用版本范围而不是特定版本</h5></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.js</span><br><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js</span><br></pre></td></tr></tbody></table></figure><ul><li><h5 id="完全省略版本以获取最新版本，不应在生产环境中使用它"><a href="#完全省略版本以获取最新版本，不应在生产环境中使用它" class="headerlink" title="完全省略版本以获取最新版本，不应在生产环境中使用它"></a>完全省略版本以获取最新版本，不应在生产环境中使用它</h5></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js</span><br></pre></td></tr></tbody></table></figure><ul><li><h5 id="将-min添加到任何JS-CSS文件以获得缩小版本-如果不存在，jsDelivr将为您生成"><a href="#将-min添加到任何JS-CSS文件以获得缩小版本-如果不存在，jsDelivr将为您生成" class="headerlink" title="将.min添加到任何JS / CSS文件以获得缩小版本,如果不存在，jsDelivr将为您生成"></a>将<code>.min</code>添加到任何JS / CSS文件以获得缩小版本,如果不存在，jsDelivr将为您生成</h5></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js</span><br></pre></td></tr></tbody></table></figure><ul><li><h5 id="在末尾添加-以获取目录列表"><a href="#在末尾添加-以获取目录列表" class="headerlink" title="在末尾添加 / 以获取目录列表"></a>在末尾添加 / 以获取目录列表</h5></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery/</span><br></pre></td></tr></tbody></table></figure><ul><li><h5 id="刷新-JsDelivr-缓存"><a href="#刷新-JsDelivr-缓存" class="headerlink" title="刷新 JsDelivr 缓存"></a>刷新 JsDelivr 缓存</h5></li></ul><p>你的 CDN 链接想手动刷新时，把链接前缀替换成</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://purge.jsdelivr.net/</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> CDN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsDelivr </tag>
            
            <tag> GitHub </tag>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Matery-主题个性化修改二</title>
      <link href="/posts/a1c374f3.html"/>
      <url>/posts/a1c374f3.html</url>
      
        <content type="html"><![CDATA[<h4 id="一-添加动态诗词"><a href="#一-添加动态诗词" class="headerlink" title="一.添加动态诗词"></a>一.添加动态诗词</h4><p>​打开 <code>themes/matery/source/css/matery.css</code> 文件，有一个<code>.bg-color</code> 属性，修改其属性值即可，代码如下：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://sdk.jinrishici.com/v2/browser/jinrishici.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>​然后再将 <code>/themes/matery/layout/_partial/bg-cover-content.ejs</code> 中的 <code>&lt;%= config.description %&gt;</code> 修改为 <code>&lt;%- '&lt;span id="jinrishici-sentence"&gt;正在加载今日诗词....&lt;/span&gt;' %&gt;</code>，这个使用前提是将主题配置文件的 <code>subtitle</code> 的值改为 <code>false</code>。</p><h4 id="二-鼠标点击文字特效"><a href="#二-鼠标点击文字特效" class="headerlink" title="二.鼠标点击文字特效"></a>二.鼠标点击文字特效</h4><p>​引入 js 文件，在主题文件下的 <code>/source/js/</code> 下新建 <code>click_show_text.js</code>，其代码如下：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">var a_idx = 0;</span><br><span class="line">jQuery(document).ready(function ($) {</span><br><span class="line">    $("body").click(function (e) {</span><br><span class="line">        var a = new Array("富强", "民主", "文明", "和谐", "自由", "平等", "公正", "法治", "爱国", "敬业", "诚信", "友善");</span><br><span class="line">        var $i = $("<span class="tag">&lt;<span class="name">span</span>/&gt;</span>").text(a[a_idx]);</span><br><span class="line">        a_idx = (a_idx + 1) % a.length;</span><br><span class="line">        var x = e.pageX,</span><br><span class="line">            y = e.pageY;</span><br><span class="line">        $i.css({</span><br><span class="line">            "z-index": 5,</span><br><span class="line">            "top": y - 20,</span><br><span class="line">            "left": x,</span><br><span class="line">            "position": "absolute",</span><br><span class="line">            "font-weight": "bold",</span><br><span class="line">            "color": "#FF0000"</span><br><span class="line">        });</span><br><span class="line">        $("body").append($i);</span><br><span class="line">        $i.animate({</span><br><span class="line">                "top": y - 180,</span><br><span class="line">                "opacity": 0</span><br><span class="line">            },</span><br><span class="line">            3000,</span><br><span class="line">            function () {</span><br><span class="line">                $i.remove();</span><br><span class="line">            });</span><br><span class="line">    });</span><br><span class="line">    setTimeout('delay()', 2000);</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line">function delay() {</span><br><span class="line">    $(".buryit").removeAttr("onclick");</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="三-添加鼠标彩虹星星掉落跟随效果"><a href="#三-添加鼠标彩虹星星掉落跟随效果" class="headerlink" title="三.添加鼠标彩虹星星掉落跟随效果"></a>三.添加鼠标彩虹星星掉落跟随效果</h4><p>​在 <code>themes/matery/source/js</code> 目录下新建 <strong>cursor.js</strong> 文件。打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/js/cursor.js">传送门</a>，将内容复制粘贴到 cursor.js 即可。</p><p>​然后在 <code>themes/matery/layout/layout.ejs</code> 文件内添加下面的内容：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/cursor.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="四-鼠标点击烟花爆炸效果"><a href="#四-鼠标点击烟花爆炸效果" class="headerlink" title="四.鼠标点击烟花爆炸效果"></a>四.鼠标点击烟花爆炸效果</h4><p>​在 <code>themes/matery/source/js</code> 目录下新建 <code>fireworks.js</code> 文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.2.7/source/js/fireworks.js">传送门</a>，将内容复制粘贴到 <code>fireworks.js</code> 即可。</p><p>​然后再 <code>themes/matery/layout/layout.ejs</code> 文件内添加下面的内容：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">"fireworks"</span> <span class="attr">style</span>=<span class="string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span> &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/fireworks.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>​然后在 <code>themes/matery/layout/layout.ejs</code> 文件内添加下面的内容：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">"fireworks"</span> <span class="attr">style</span>=<span class="string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span> &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/fireworks.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="五-添加动态科技线条背景"><a href="#五-添加动态科技线条背景" class="headerlink" title="五.添加动态科技线条背景"></a>五.添加动态科技线条背景</h4><p>​在 <code>themes/matery/layout/layout.ejs</code> 文件中添加如下代码：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--动态线条背景--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span></span></span><br><span class="line"><span class="tag"><span class="attr">color</span>=<span class="string">"122 103 238"</span> <span class="attr">opacity</span>=<span class="string">'0.7'</span> <span class="attr">zIndex</span>=<span class="string">"-2"</span> <span class="attr">count</span>=<span class="string">"200"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>其中：</p><ul><li>color：表示线条颜色，三个数字分别为 (R,G,B)，默认：（0,0,0）</li><li>opacity：表示线条透明度（0~1），默认：0.5</li><li>count：表示线条的总数量，默认：150</li><li>zIndex：表示背景的 z-index 属性，css 属性用于控制所在层的位置，默认：-1</li></ul><h4 id="六-配置音乐播放器"><a href="#六-配置音乐播放器" class="headerlink" title="六.配置音乐播放器"></a>六.配置音乐播放器</h4><p>​要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 是否在首页显示音乐</span><br><span class="line">music:</span><br><span class="line">  enable: true</span><br><span class="line">  title:         # 非吸底模式有效</span><br><span class="line">    enable: true</span><br><span class="line">    show: 听听音乐</span><br><span class="line">  server: netease   # require music platform: netease, tencent, kugou, xiami, baidu</span><br><span class="line">  type: playlist    # require song, playlist, album, search, artist</span><br><span class="line">  id: 503838841     # require song id / playlist id / album id / search keyword</span><br><span class="line">  fixed: false      # 开启吸底模式</span><br><span class="line">  autoplay: false   # 是否自动播放</span><br><span class="line">  theme: '#42b983'</span><br><span class="line">  loop: 'all'       # 音频循环播放, 可选值: 'all', 'one', 'none'</span><br><span class="line">  order: 'random'   # 音频循环顺序, 可选值: 'list', 'random'</span><br><span class="line">  preload: 'auto'   # 预加载，可选值: 'none', 'metadata', 'auto'</span><br><span class="line">  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span><br><span class="line">  listFolded: true  # 列表默认折叠</span><br></pre></td></tr></tbody></table></figure><ul><li><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</li></ul><p><code>baidu</code>（百度音乐）。</p><ul><li><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p></li><li><p>id<code>获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，</code>playlist<code>的</code>id即为这串数字。QQ音乐则手机分享歌单，链接里id后一串数字即是。</p></li></ul><h4 id="七-添加-RSS-订阅支持"><a href="#七-添加-RSS-订阅支持" class="headerlink" title="七.添加 RSS 订阅支持"></a>七.添加 RSS 订阅支持</h4><p>​用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 ,<code>RSS</code>安装命令如下：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></tbody></table></figure><p>​在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br><span class="line">  hub:</span><br><span class="line">  content:</span><br><span class="line">  content_limit: 140</span><br><span class="line">  content_limit_delim: ' '</span><br><span class="line">  order_by: -date</span><br></pre></td></tr></tbody></table></figure><h4 id="八-看板娘模块的安装和使用"><a href="#八-看板娘模块的安装和使用" class="headerlink" title="八.看板娘模块的安装和使用"></a>八.看板娘模块的安装和使用</h4><p>模块安装：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-helper-live2d --save</span><br></pre></td></tr></tbody></table></figure><p>​下载完成后，可以在node_modules文件夹中找到自己安装的插件。然后下载你想要的看板娘模块（可以自己到网上找哪个合心意的），执行命令：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install {packagename}</span><br><span class="line"># 例如npm install live2d-widget-model-haru</span><br></pre></td></tr></tbody></table></figure><p>​下载完成后，回到blog根目录下配置_config.yml，添加以下代码（model要根据自己情况设置）：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: false</span><br><span class="line">  debug: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-z16</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 200</span><br><span class="line">    height: 400</span><br><span class="line">  mobile:</span><br><span class="line">    show: false</span><br></pre></td></tr></tbody></table></figure><p>在右下角有看板娘啦！</p><h4 id="九-主页新增关注我的Bilibili"><a href="#九-主页新增关注我的Bilibili" class="headerlink" title="九.主页新增关注我的Bilibili"></a>九.主页新增关注我的Bilibili</h4><p>​进入主题路径<code>\layout\_partial\social-link.ejs</code>,新增以下代码：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.socialLink.bilibili) { %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%= theme.socialLink.bilibili %&gt;"</span> <span class="attr">class</span>=<span class="string">"tooltipped"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">data-tooltip</span>=<span class="string">"关注我的Bilibili"</span> <span class="attr">data-position</span>=<span class="string">"top"</span> <span class="attr">data-delay</span>=<span class="string">"50"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-play-circle"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&lt;% } %&gt;</span><br></pre></td></tr></tbody></table></figure><p>​进入主题配置文件<code>_config.yml</code>，添加:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 首页 banner 中的第二行个人信息配置，留空即不启用</span><br><span class="line">socialLink:</span><br><span class="line">bilibili: #https://space.bilibili.com/xxx</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Matery-主题个性化修改一</title>
      <link href="/posts/9a435a5a.html"/>
      <url>/posts/9a435a5a.html</url>
      
        <content type="html"><![CDATA[<h4 id="一-修改主题的-logo-图和-favicon-图标"><a href="#一-修改主题的-logo-图和-favicon-图标" class="headerlink" title="一.修改主题的 logo 图和 favicon 图标"></a>一.修改主题的 logo 图和 favicon 图标</h4><p>​        找到如下的路径，将其替换为你的 logo.png 和 favicon.png 即可：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">favicon.png路径:"博客根目录\themes\hexo-theme-matery\source\favicon.png"</span><br><span class="line">logo.png路径"博客根目录\themes\hexo-theme-matery\source\medias\logo.png"</span><br></pre></td></tr></tbody></table></figure><h4 id="二-去掉右上角的-github-图标"><a href="#二-去掉右上角的-github-图标" class="headerlink" title="二.去掉右上角的 github 图标"></a>二.去掉右上角的 github 图标</h4><p>​        打开你的主题配置文件，找到下面的配置:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Whether to display fork me on github icon and link, default true, You can change it to your repo address</span><br><span class="line"># 配置是否在 header 中显示 fork me on github 的图标，默认为true，你可以修改为你的仓库地址.</span><br><span class="line">githubLink:</span><br><span class="line">  enable: false</span><br><span class="line">  url: https://github.com/blinkfox/hexo-theme-matery</span><br><span class="line">  title: Fork Me</span><br></pre></td></tr></tbody></table></figure><p>将 <strong>enable</strong> 的属性值由 <strong>true</strong> 改为 <strong>false</strong> 即可。</p><h4 id="三-修改社交链接"><a href="#三-修改社交链接" class="headerlink" title="三.修改社交链接"></a>三.修改社交链接</h4><p>​        主页 banner 图中显示的社交链接与底部的社交链接是同步修改的，打开主题配置文件，将社交链接信息修改为你的信息。修改如下:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 首页 banner 中的第二行个人信息配置，留空即不启用</span><br><span class="line">socialLink:</span><br><span class="line">  github:  https://github.com/blinkfox</span><br><span class="line">  email: 1181062873@qq.com</span><br><span class="line">  facebook: # https://www.facebook.com/xxx</span><br><span class="line">  twitter: # https://twitter.com/xxx</span><br><span class="line">  qq: 1181062873</span><br><span class="line">  weibo: # https://weibo.com/xxx</span><br><span class="line">  zhihu: # https://www.zhihu.com/xxx</span><br><span class="line">  rss: true # true、false</span><br></pre></td></tr></tbody></table></figure><h4 id="四-去掉-banner-图的动态滤镜颜色"><a href="#四-去掉-banner-图的动态滤镜颜色" class="headerlink" title="四.去掉 banner 图的动态滤镜颜色"></a>四.去掉 banner 图的动态滤镜颜色</h4><p>​        打开 <code>themes/matery/source/css/matery.css</code> 文件，查找下面的代码块，然后将其注释即可。如下：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.bg-cover:after {</span><br><span class="line">    -webkit-animation: rainbow 60s infinite;</span><br><span class="line">    animation: rainbow 60s infinite;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>或者是找到如下代码，将其注释掉即可：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/*如果想去掉banner图的颜色渐变效果，请将以下的css属性注释掉或者删除掉即可*/</span><br><span class="line">@-webkit-keyframes rainbow {</span><br><span class="line">   /* 动态切换背景颜色. */</span><br><span class="line">}</span><br><span class="line">@keyframes rainbow {</span><br><span class="line">    /* 动态切换背景颜色. */</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="五-修改导航栏颜色及透明效果"><a href="#五-修改导航栏颜色及透明效果" class="headerlink" title="五.修改导航栏颜色及透明效果"></a>五.修改导航栏颜色及透明效果</h4><p>​打开 <code>themes/matery/source/css/matery.css</code> 文件，找到<code>.bg-color</code> 属性，修改其属性值即可，代码如下：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.bg-color {</span><br><span class="line">    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%); //修改成自己喜欢的颜色值</span><br><span class="line">    opacity: 0.8;  //透明效果 值范围 0~1，看情况自己修改</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="六-修改-banner-图和文章特色图"><a href="#六-修改-banner-图和文章特色图" class="headerlink" title="六.修改 banner 图和文章特色图"></a>六.修改 banner 图和文章特色图</h4><p>​直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$('.bg-cover').css('background-image', 'url(/medias/banner/' + new Date().getDay() + '.jpg)');</span><br></pre></td></tr></tbody></table></figure><p>​想改为每小时或者每分钟切换 banner 图的话，需要将 <code>getDay()</code> 改为 <code>getHours()</code> 或者 <code>getMinutes()</code> 即可。</p><p>随机切换代码如下：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$('.bg-cover').css('background-image', 'url(&lt;%- theme.featureImages[Math.floor(Math.random() * theme.featureImages.length + 1)-1] %&gt;)');</span><br></pre></td></tr></tbody></table></figure><p>​文章特色图在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加、减少或者替换，并需要在 <code>_config.yml</code> 做同步修改。</p><h4 id="七-首页动态打字效果副标题"><a href="#七-首页动态打字效果副标题" class="headerlink" title="七.首页动态打字效果副标题"></a>七.首页动态打字效果副标题</h4><p>​在主题配置文件中，找到下面的配置：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 打字效果副标题.</span><br><span class="line"># 如果有符号 ‘ ，请在 ’ 前面加上 \</span><br><span class="line">subtitle:</span><br><span class="line">  enable: true # true添加首页动态打字效果副标题 false添加动态诗词</span><br><span class="line">  loop: true # 是否循环</span><br><span class="line">  showCursor: true # 是否显示光标</span><br><span class="line">  startDelay: 300 # 开始延迟</span><br><span class="line">  typeSpeed: 100 # 打字速度</span><br><span class="line">  backSpeed: 50 # 删除速度</span><br><span class="line">  sub:</span><br><span class="line">    - 从来没有真正的绝境, 只有心灵的迷途</span><br><span class="line">    - Never really desperate, only the lost of the soul</span><br></pre></td></tr></tbody></table></figure><h4 id="八-动态标题"><a href="#八-动态标题" class="headerlink" title="八.动态标题"></a>八.动态标题</h4><p>​实现方法，引入 js 文件，在主题文件下的 /source/js/ 下新建 FunnyTitle.js，增加以下代码：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var OriginTitle = document.title;</span><br><span class="line"> var titleTime;</span><br><span class="line"> document.addEventListener('visibilitychange', function () {</span><br><span class="line">     if (document.hidden) {</span><br><span class="line">         $('[rel="icon"]').attr('href', "https://cdn.jsdelivr.net/gh/guixinchn/image/blog/favicon.png");</span><br><span class="line">         document.title = '我相信你还会回来的！';</span><br><span class="line">         clearTimeout(titleTime);</span><br><span class="line">     }</span><br><span class="line">     else {</span><br><span class="line">         $('[rel="icon"]').attr('href', "https://cdn.jsdelivr.net/gh/guixinchn/image/blog/favicon.png");</span><br><span class="line">         document.title = '哈哈，我就知道！' + OriginTitle;</span><br><span class="line">         titleTime = setTimeout(function () {</span><br><span class="line">             document.title = OriginTitle;</span><br><span class="line">         }, 2000);</span><br><span class="line">     }</span><br><span class="line"> });</span><br></pre></td></tr></tbody></table></figure><p>然后在添加到 themes/matery/layout/layout.ejs 引入</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--动态标题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for('/js/FunnyTitle.js') %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="九-valine评论模块配置"><a href="#九-valine评论模块配置" class="headerlink" title="九.valine评论模块配置"></a>九.valine评论模块配置</h4><p>​主题配置文件找到valine部分，按需求配置：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.</span><br><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appId: # 将应用key的App ID设置在这里</span><br><span class="line">  appKey: # 将应用key的App Key设置在这里</span><br><span class="line">  notify: false # Verification code验证码 默认为false</span><br><span class="line">  verify: false # Verification code验证码 默认为false</span><br><span class="line">  visitor: true #文章访问量统计。</span><br><span class="line">  enableQQ: true #是否启用昵称框自动获取QQ昵称和QQ头像, 默认关闭</span><br><span class="line">  avatar: 'wavatar' # 头像风格: mp/identicon/monsterid/wavatar/retro/hide</span><br><span class="line">  pageSize: 10 # 分页大小，10页就自动分页</span><br><span class="line">  placeholder: 'just go go' # 初始化评论显示，根据自己修改，这里默认</span><br><span class="line">  background: /medias/comment_bg.png</span><br></pre></td></tr></tbody></table></figure><h4 id="十-修改网站背景图"><a href="#十-修改网站背景图" class="headerlink" title="十.修改网站背景图"></a>十.修改网站背景图</h4><p>​在主题配置文件找到以下部分,自行开启，并替换图片</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 网站背景图</span><br><span class="line">background:</span><br><span class="line">  enable: false</span><br><span class="line">  url: "https://cdn.jsdelivr.net/gh/Tokisaki-Galaxy/res/site/medias/background.jpg"</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Matery主题基础修改</title>
      <link href="/posts/588ed204.html"/>
      <url>/posts/588ed204.html</url>
      
        <content type="html"><![CDATA[<p><strong>请根据个人需要添加不同的插件及功能</strong></p><p>​⛔首先声明一下，一定要分清什么是站点配置文件，什么是主题文件，站点配置文件的为<code>Hexo根目录</code>下的<code> _config.yml</code>，主题配置文件为<code>themes</code>主题文件夹下的<code>_config.yml</code>。</p><h4 id="一-主题下载与安装"><a href="#一-主题下载与安装" class="headerlink" title="一. 主题下载与安装"></a>一. 主题下载与安装</h4><p>​俗话说“人靠衣装马靠鞍,三分长相七分打扮”，一个博客好不好看全看主题及后期修改。<br>主题安装方法有两种：</p><h5 id="1-第一种"><a href="#1-第一种" class="headerlink" title="1. 第一种"></a>1. 第一种</h5><p>​点击 <a href="https://github.com/blinkfox/hexo-theme-matery" title="传送门">传送门</a> 下载 Matery 主题的最新稳定版的代码，解压缩后，将 hexo-theme-matery 的文件夹复制到你 Hexo 的 themes 文件夹中即可。</p><h5 id="1-第二种"><a href="#1-第二种" class="headerlink" title="1. 第二种"></a>1. 第二种</h5><p>​在你的站点目录文件夹下使用 git clone 命令来下载：直接在站点根目录下执行下面的命令，即可进行主题的下载，主题有两个版本，稳定版本和最新版本 (不定期更新优化)，自主选择版本。</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/blinkfox/hexo-theme-matery themes/matery     # 稳定版</span><br><span class="line">git clone -b develop https://github.com/blinkfox/hexo-theme-matery themes/matery   #最新版(不定期进行优化更新)</span><br></pre></td></tr></tbody></table></figure><p><strong>下载完成后打开站点的<code>_config.yml</code>配置文件，修改主题为:<code>matery</code></strong></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: hexo-theme-matery</span><br></pre></td></tr></tbody></table></figure><h4 id="二-新建分类-categories-页"><a href="#二-新建分类-categories-页" class="headerlink" title="二.新建分类 categories 页"></a>二.新建分类 categories 页</h4><p>​<code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page "categories"</span><br></pre></td></tr></tbody></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2018-09-30 17:25:30</span><br><span class="line">type: "categories"</span><br><span class="line">layout: "categories"</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><h4 id="三-新建标签-tags-页"><a href="#三-新建标签-tags-页" class="headerlink" title="三.新建标签 tags 页"></a>三.新建标签 tags 页</h4><p>​<code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page "tags"</span><br></pre></td></tr></tbody></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2018-09-30 18:23:38</span><br><span class="line">type: "tags"</span><br><span class="line">layout: "tags"</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><h4 id="四-新建关于我-about-页"><a href="#四-新建关于我-about-页" class="headerlink" title="四.新建关于我 about 页"></a>四.新建关于我 about 页</h4><p>​<code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page "about"</span><br></pre></td></tr></tbody></table></figure><p>​编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: about</span><br><span class="line">date: 2018-09-30 17:25:30</span><br><span class="line">type: "about"</span><br><span class="line">layout: "about"</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><h4 id="五-新建留言板-contact-页（可选的）"><a href="#五-新建留言板-contact-页（可选的）" class="headerlink" title="五.新建留言板 contact 页（可选的）"></a>五.新建留言板 contact 页（可选的）</h4><p>​<code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page "contact"</span><br></pre></td></tr></tbody></table></figure><p>​编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: contact</span><br><span class="line">date: 2018-09-30 17:25:30</span><br><span class="line">type: "contact"</span><br><span class="line">layout: "contact"</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><p>​<strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p><h4 id="六-新建友情链接-friends-页（可选的）"><a href="#六-新建友情链接-friends-页（可选的）" class="headerlink" title="六.新建友情链接 friends 页（可选的）"></a>六.新建友情链接 friends 页（可选的）</h4><p>​<code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page "friends"</span><br></pre></td></tr></tbody></table></figure><p>​编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: friends</span><br><span class="line">date: 2018-12-12 21:25:30</span><br><span class="line">type: "friends"</span><br><span class="line">layout: "friends"</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><p>​同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[{</span><br><span class="line">    "avatar": "http://image.luokangyuan.com/1_qq_27922023.jpg",</span><br><span class="line">    "name": "码酱",</span><br><span class="line">    "introduction": "我不是大佬，只是在追寻大佬的脚步",</span><br><span class="line">    "url": "http://luokangyuan.com/",</span><br><span class="line">    "title": "前去学习"</span><br><span class="line">}, {</span><br><span class="line">    "avatar": "http://image.luokangyuan.com/4027734.jpeg",</span><br><span class="line">    "name": "闪烁之狐",</span><br><span class="line">    "introduction": "编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬",</span><br><span class="line">    "url": "https://blinkfox.github.io/",</span><br><span class="line">    "title": "前去学习"</span><br><span class="line">}, {</span><br><span class="line">    "avatar": "http://image.luokangyuan.com/avatar.jpg",</span><br><span class="line">    "name": "ja_rome",</span><br><span class="line">    "introduction": "平凡的脚步也可以走出伟大的行程",</span><br><span class="line">    "url": "https://me.csdn.net/jlh912008548",</span><br><span class="line">    "title": "前去学习"</span><br><span class="line">}]</span><br></pre></td></tr></tbody></table></figure><h4 id="七-新建-404-页"><a href="#七-新建-404-页" class="headerlink" title="七.新建 404 页"></a>七.新建 404 页</h4><p>​如果在你的博客 <code>source</code> 目录下还没有 <code>404.md</code> 文件，那么你就需要新建一个</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page 404</span><br></pre></td></tr></tbody></table></figure><p>​编辑你刚刚新建的页面文件 <code>/source/404/index.md</code>，至少需要以下内容：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 404</span><br><span class="line">date: 2018-09-30 17:25:30</span><br><span class="line">type: "404"</span><br><span class="line">layout: "404"</span><br><span class="line">description: "Oops～，我崩溃了！找不到你想要的页面 :("</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><h4 id="八-菜单导航配置"><a href="#八-菜单导航配置" class="headerlink" title="八.菜单导航配置"></a>八.菜单导航配置</h4><p>​配置基本菜单导航的名称、路径url和图标icon.</p><h5 id="1-菜单导航名称可以是中文也可以是英文-如：Index或主页"><a href="#1-菜单导航名称可以是中文也可以是英文-如：Index或主页" class="headerlink" title="1. 菜单导航名称可以是中文也可以是英文(如：Index或主页)"></a>1. 菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)</h5><h5 id="2-图标icon-可以在Font-Awesome-中查找"><a href="#2-图标icon-可以在Font-Awesome-中查找" class="headerlink" title="2. 图标icon 可以在Font Awesome 中查找"></a>2. 图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找</h5><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Index:</span><br><span class="line">    url: /</span><br><span class="line">    icon: fas fa-home</span><br><span class="line">  Tags:</span><br><span class="line">    url: /tags</span><br><span class="line">    icon: fas fa-tags</span><br><span class="line">  Categories:</span><br><span class="line">    url: /categories</span><br><span class="line">    icon: fas fa-bookmark</span><br><span class="line">  Archives:</span><br><span class="line">    url: /archives</span><br><span class="line">    icon: fas fa-archive</span><br><span class="line">  About:</span><br><span class="line">    url: /about</span><br><span class="line">    icon: fas fa-user-circle</span><br><span class="line">  Friends:</span><br><span class="line">    url: /friends</span><br><span class="line">    icon: fas fa-address-book</span><br></pre></td></tr></tbody></table></figure><h4 id="九-文章-Front-matter-介绍"><a href="#九-文章-Front-matter-介绍" class="headerlink" title="九.文章 Front-matter 介绍"></a>九.文章 Front-matter 介绍</h4><h5 id="1-Front-matter-选项详解"><a href="#1-Front-matter-选项详解" class="headerlink" title="1.Front-matter 选项详解"></a>1.Front-matter 选项详解</h5><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>hide</td><td><code>false</code></td><td>隐藏文章，如果<code>hide</code>值为<code>true</code>，则文章不会在首页显示</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol><h5 id="2-最简示例"><a href="#2-最简示例" class="headerlink" title="2.最简示例"></a>2.最简示例</h5><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: typora-vue-theme主题介绍</span><br><span class="line">date: 2018-09-07 09:25:00</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><h5 id="3-最全示例"><a href="#3-最全示例" class="headerlink" title="3.最全示例"></a>3.最全示例</h5><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: typora-vue-theme主题介绍</span><br><span class="line">date: 2018-09-07 09:25:00</span><br><span class="line">author: 赵奇</span><br><span class="line">img: /source/images/xxx.jpg</span><br><span class="line">top: true</span><br><span class="line">hide: false</span><br><span class="line">cover: true</span><br><span class="line">coverImg: /images/1.jpg</span><br><span class="line">password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92</span><br><span class="line">toc: false</span><br><span class="line">mathjax: false</span><br><span class="line">summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span><br><span class="line">categories: Markdown</span><br><span class="line">tags:</span><br><span class="line">  - Typora</span><br><span class="line">  - Markdown</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原生安卓WiFi信号去叹号去叉教程5.0-Android P</title>
      <link href="/posts/91851bc6.html"/>
      <url>/posts/91851bc6.html</url>
      
        <content type="html"><![CDATA[<p><strong>原生安卓WiFi信号叹号和叉的原因</strong></p><p>  Captive Portal是安卓5引入的一种检测网络是否正常连接的机制，制作的非常有创意，通过HTTP返回的状态码是否是204来判断是否成功，如果访问得到了200带网页数据，那你就可能处在一个需要登录验证才能上网的环境里，比如说校园网，再比如说一些酒店提供的客户才能免费使用的WiFi（其实是通过DNS劫持实现的），如果连接超时（根本就连接不上）就在WiFi图标和信号图标上加一个标志，安卓5和6是叹号，安卓7改成一个叉了。只不过默认访问的是谷歌自家的验证服务器，然而由于你懂的原因，就算你连接上了网络也连不上这个服务器。<br>  谷歌设计了一个开关来控制是否启用这个特性，同时也提供了一个变量来控制待验证的服务器地址，国内的修改版ROM通常都改成了高通中国的地址，还有一些ROM设计了代码在重启的时候恢复这个设置。</p><hr><p><strong>以下需要ADB调试，配置不赘述</strong></p><h4 id="一-5-0-6-x教程"><a href="#一-5-0-6-x教程" class="headerlink" title="一. 5.0 - 6.x教程"></a>一. 5.0 - 6.x教程</h4><p>5和6还不支持HTTPS，直接修改即可</p><ul><li>检测开关相关：<br>  先处理开关状态，这个变量删除就是默认开启的，删除操作随意执行，反正没影响，删除状态下获取这个变量会返回null。<br>注意：如果关闭，则无法判断当前网络是否需要登录，无法自动弹出登录页面<figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">删除</span><br><span class="line">adb shell settings delete <span class="keyword">global</span> captive_portal_server</span><br><span class="line">禁用</span><br><span class="line">adb shell settings put <span class="keyword">global</span> captive_portal_server <span class="number">0</span></span><br><span class="line">查询状态</span><br><span class="line">adb shell settings get <span class="keyword">global</span> captive_portal_server</span><br></pre></td></tr></tbody></table></figure></li><li>服务器地址相关：<figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">删除地址就可以恢复默认的谷歌服务器</span><br><span class="line">adb shell settings delete <span class="keyword">global</span> captive_portal_server</span><br><span class="line">设置一个可用地址（高通/V2EX都推荐）</span><br><span class="line">adb shell settings put <span class="keyword">global</span> captive_portal_server captive.v2ex.co</span><br><span class="line">查询当前地址</span><br><span class="line">adb shell settings get <span class="keyword">global</span> captive_portal_server</span><br></pre></td></tr></tbody></table></figure></li></ul><h4 id="二-7-0-7-1教程"><a href="#二-7-0-7-1教程" class="headerlink" title="二. 7.0 - 7.1教程"></a>二. 7.0 - 7.1教程</h4><p>  这两个版本相比5和6没有大的更改，只是默认连接服务器的时候使用HTTPS，但是提供了一个开关用以指定是否使用HTTPS</p><ul><li>检测开关相关：<figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同<span class="number">5.0</span> - <span class="number">6</span>.x</span><br></pre></td></tr></tbody></table></figure></li><li>HTTPS开关相关：<figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">删除（直接删除则默认使用HTTPS）</span><br><span class="line">adb shell settings delete <span class="keyword">global</span> captive_portal_use_https</span><br><span class="line">禁用HTTPS（写<span class="number">1</span>启用 写<span class="number">0</span>禁用）</span><br><span class="line">adb shell settings put <span class="keyword">global</span> captive_portal_use_https <span class="number">0</span></span><br><span class="line">查询HTTPS开关状态</span><br><span class="line">adb shell settings get <span class="keyword">global</span> captive_portal_use_https</span><br></pre></td></tr></tbody></table></figure></li><li>服务器地址相关：<br>（如果启用了HTTPS需要先确定地址是否支持HTTPS）<figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同<span class="number">5.0</span> - <span class="number">6</span>.x</span><br></pre></td></tr></tbody></table></figure></li></ul><h4 id="三-7-1-1教程"><a href="#三-7-1-1教程" class="headerlink" title="三. 7.1.1教程"></a>三. 7.1.1教程</h4><p>  这个版本把HTTPS和HTTP两个地址分开保存，并通过7.0加入的HTTPS开关来控制使用哪一个地址。</p><ul><li>检测开关相关：<figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同<span class="number">5.0</span> - <span class="number">6</span>.x</span><br></pre></td></tr></tbody></table></figure></li><li>HTTPS开关相关：<figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同<span class="number">7.0</span> - <span class="number">7.1</span></span><br></pre></td></tr></tbody></table></figure></li><li>服务器地址相关：<figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">删除（删除默认用HTTPS）</span><br><span class="line">adb shell settings delete <span class="keyword">global</span> captive_portal_https_url</span><br><span class="line">adb shell settings delete <span class="keyword">global</span> captive_portal_http_url</span><br><span class="line">分别修改两个地址</span><br><span class="line">adb shell settings put <span class="keyword">global</span> captive_portal_http_url http:<span class="comment">//captive.v2ex.co/generate_204</span></span><br><span class="line">adb shell settings put <span class="keyword">global</span> captive_portal_https_url https:<span class="comment">//captive.v2ex.co/generate_204</span></span><br></pre></td></tr></tbody></table></figure></li></ul><h4 id="四-7-1-2教程"><a href="#四-7-1-2教程" class="headerlink" title="四. 7.1.2教程"></a>四. 7.1.2教程</h4><p>  此版本服务器地址判断逻辑相比7.1.1没有更改，但是检测的开关却变了。</p><ul><li>检测开关：<figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">删除变量：（删除以后默认启用）</span><br><span class="line">adb shell settings delete <span class="keyword">global</span> captive_portal_mode</span><br><span class="line">关闭检测：</span><br><span class="line">adb shell settings put <span class="keyword">global</span> captive_portal_mode <span class="number">0</span></span><br><span class="line">查看当前状态：</span><br><span class="line">adb shell settings get <span class="keyword">global</span> captive_portal_mode</span><br></pre></td></tr></tbody></table></figure></li><li>服务器地址相关（同7.1.1）：<figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">删除（删除默认用HTTPS）</span><br><span class="line">adb shell settings delete <span class="keyword">global</span> captive_portal_https_url</span><br><span class="line">adb shell settings delete <span class="keyword">global</span> captive_portal_http_url</span><br><span class="line">分别修改两个地址</span><br><span class="line">adb shell settings put <span class="keyword">global</span> captive_portal_http_url http:<span class="comment">//captive.v2ex.co/generate_204</span></span><br><span class="line">adb shell settings put <span class="keyword">global</span> captive_portal_https_url https:<span class="comment">//captive.v2ex.co/generate_204</span></span><br></pre></td></tr></tbody></table></figure></li></ul><h4 id="五-Android8-0-8-1和9-0同上。"><a href="#五-Android8-0-8-1和9-0同上。" class="headerlink" title="五. Android8.0/8.1和9.0同上。"></a>五. Android8.0/8.1和9.0同上。</h4>]]></content>
      
      
      <categories>
          
          <category> 安卓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓 </tag>
            
            <tag> 修复 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
